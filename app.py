import os,requests
from Plugin.RadPLugin import MangSession
from Plugin.dbs import *
from Plugin.apis import *
from Plugin.dbs import Givt,statck
from Plugin.tempdata import USER_TEMP
from Plugin.functions import *
from Plugin.RTools import dataS, START_DELET_TIMER_AD, RAND_CODE
from Plugin.edit_price import *
import shutil
import zipfile
AD_CHANNL = '@uuoen'
AD_REQUEST_CHANNL = '@hdjdjjjjf'

REACTIONS_LIST = {
    '1':['ü•∞', 'üî•', 'üëç', '‚ù§Ô∏è','üéâ'],
    '2':['ü§Æ','üí©','üëé','üñï'],
    '3':['‚ù§Ô∏è‚Äçüî•','ü§Ø', 'üçå', '‚ö°Ô∏è'],
}


datas = dataS()
Db = data()
if not os.path.isdir('dbs'):
    os.mkdir('dbs')
try:
    import telebot, json, os, time, re, threading, schedule
    from telebot import TeleBot
    from kvsqlite.sync import Client as uu
    from telebot.types import InlineKeyboardButton as btn, InlineKeyboardMarkup as mk
    import asyncio

    import time
    import requests
    from user_agent import generate_user_agent
    import datetime
    import base64
    import ipaddress
    import struct
    from pathlib import Path
    from typing import Type
    import shutil
    import zipfile
    import aiosqlite
    from opentele.api import APIData
    from pyrogram.session.internals.data_center import DataCenter
    from telethon import TelegramClient
    from telethon.sessions import StringSession
    import secrets
    from opentele.api import API, APIData
    from pyrogram.client import Client

except:
    os.system('python3 -m pip install telebot pyrogram tgcrypto kvsqlite pyromod==1.4 schedule')
    import telebot, json, os, time, schedule
    from telebot import TeleBot
    from kvsqlite.sync import Client as uu
    from kvsqlite.sync import Client as uu
    from telebot.types import InlineKeyboardButton as btn, InlineKeyboardMarkup as mk


ad_temp = {}

w = json.loads(open('config.json', 'r+',encoding="utf8").read())
token = w['bot_token']
stypes = ['member', 'administrator', 'creator']

PRICES = json.load(open("./datas/prices.json"))

ad_price = 1000
stk = statck()

view_stories_price = db.get("view_stories_price") if db.exists("view_stories_price") else 1
rect_stories_price = db.get("view_stories_price") if db.exists("view_stories_price") else 1
member_price = db.get("member_price") if db.exists("member_price") else 20
vote_price = db.get("vote_price") if db.exists("vote_price") else 20
spam_price = db.get("spam_price") if db.exists("spam_price") else 10
react_price = db.get("react_price") if db.exists("react_price") else 2
forward_price = db.get("forward_price") if db.exists("forward_price") else 2
view_price = db.get("view_price") if db.exists("view_price") else 1
poll_price = db.get("poll_price") if db.exists("poll_price") else 2
comment_price = db.get("comment_price") if db.exists("comment_price") else 12
link_price = db.get("link_price") if db.exists("link_price") else 200
linkbot2_price = db.get("link_price") if db.exists("link_price") else 20
userbot_price = db.get("userbot_price") if db.exists("userbot_price") else 20
linkbot_price = db.get("linkbot2_price") if db.exists("linkbot2_price") else 20
story_price = db.get("story_price") if db.exists("story_price") else 20

db = uu('dbs/elhakem.ss', 'rshq')

bk = mk(row_width=1).add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
db.set('force', [])
token_bot = "6709442001:AAGUuE3ARkKb6Isx0u2eParwOe78n_vWz2Y" # ÿ™ŸàŸÉŸÜ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿßÿ≥ÿßÿ≥
token_helper = "6748902950:AAEUKF-ueodH_p_w44Wvzqyl0CLFEFW4kOE" #ÿ™ŸàŸÉŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ

bot = TeleBot(token=token_bot,num_threads=45,threaded=True,skip_pending=True,parse_mode='html', disable_web_page_preview=True)

bot2 = TeleBot(token=token_helper,num_threads=45,threaded=True,skip_pending=True,parse_mode='Markdown', disable_web_page_preview=True)


if not db.get('accounts'):
    db.set('accounts', [])
    pass
if not db.get('accounts_t'):
    db.set('accounts_t', [])
if not db.get('chat_blacklist'):
    db.set('chat_blacklist', [])
sudos = 5955247510 #ÿßŸÑÿßÿØŸÖŸÜ
if not db.get("admins"):
    db.set('admins', [sudos,5955247510,  5955247510, ])
if not db.get('badguys'):
    db.set('badguys', [])
if not db.get('force'):
    db.set('force', [])
sudo = w['sudo']
def force(channel, userid):
    try:
        x = bot.get_chat_member(channel, userid)
        ##print(x)
    except:
        return True
    if str(x.status) in stypes:
        ##print(x)
        return True
    else:
        ##print(x)
        return False
def addord():
    if not db.get('orders'):
        db.set('orders', 1)
        return True
    else:
        d = db.get('orders')
        d+=1
        db.set('orders', d)
        return True
def check_vip(user_id):
    users = db.get(f"vip_{user_id}")
    noww = time.time()
    if db.exists(f"vip_{user_id}"):
        last_time = users['vip']
        timeee = int(db.get(f"vipp_{user_id}_time"))
        WAIT_TIMEE = int(timeee) * 24 * 60 * 60
        elapsed_time = noww - last_time
        if elapsed_time < WAIT_TIMEE:
            remaining_time = WAIT_TIMEE - elapsed_time
            return int(remaining_time)
        else:
            return None
    else:
        return None
bbs = token_bot
bbb = token_helper

def CeckAnjoens(id):
    REs =Db.Get(id)
    
    for chatID in REs:
        ##print(chatID)
        Status = requests.get(f"https://api.telegram.org/bot{token_helper}/getChatMember?chat_id={chatID}&user_id={id}").json()
        ##print(Status)
        if Status["result"]["status"] == "left":
            ##print("0000000000000000000000000000000000000")
            bot.send_message(chat_id=int(id), text=f"‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ ŸÖŸÜŸÉ 20 ŸÜŸÇÿ∑ÿ© ŸÑÿ£ŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÖŸÜ ŸÇŸÜÿßÿ© {chatID} .")
            b = db.get(f'user_{id}')
            b['coins']-=20
            db.set(f'user_{id}', b)
            Db.de(id)
            
            
        

# CeckAnjoens(6134717243)
# exit()
@bot.message_handler(regexp='^/start$')
def start_message(message):
    if message.from_user.id == 5554509550:
        bot.send_message(message.chat.id, 'God By ..')
    try:
        bot.delete_message(message.chat.id, USER_TEMP[message.from_user.id]['call']['id'])
    except:
        pass
    user_id = message.from_user.id
    if not user_id in USER_TEMP:
        USER_TEMP.update({user_id:{'trans':{'id':None},'call':{'id':None}, 'code':{'id':None}}})
    btn059 = btn('.', callback_data='zip_all')
    count_ord = db.get('orders') if db.get('orders') else 1
    a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
    for temp in a:
        db.delete(f'{a}_{user_id}_proccess')
    keys = mk(row_width=2)
    if user_id in db.get("admins") or user_id == sudo:
        keys_ = mk()
        btn01 = btn('ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™', callback_data='stats')
        btn02 = btn("ÿßÿ∞ÿßÿπÿ©", callback_data='cast')
        btn05, btn06 = btn('ÿ≠ÿ∏ÿ± ÿ¥ÿÆÿµ', callback_data='banone'), btn('ŸÅŸÉ ÿ≠ÿ∏ÿ±', callback_data='unbanone')
        btn09 = btn('ŸÖÿπÿ±ŸÅÿ© ÿπÿØÿØ ÿßŸÑÿßÿ±ŸÇÿßŸÖ', callback_data='numbers')
        btna = btn('ÿ™ŸÅÿπŸäŸÑ ·µõÕ¢·µé·µñ', callback_data='addvip')
        btnl = btn('ÿßŸÑÿ∫ÿßÿ° ·µõÕ¢·µé·µñ', callback_data='lesvip')
        leave = btn('ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™ ŸÖŸÜ ŸÇŸÜÿßÿ©', callback_data='leave')
        lvall = btn('ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™  ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ Ÿàÿ≠ÿ∏ÿ± ÿßŸÑÿ®Ÿàÿ™ÿßÿ™', callback_data='lvall')
        keys_.add(btn01, btn02)
        keys_.add(btn05, btn06)
        keys_.add(leave)
        btn11 = btn('ÿ™ÿπŸäŸäŸÜ ŸÇŸÜŸàÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ', callback_data='setforce')
        btn10 = btn('ÿßÿ∂ÿßŸÅŸá ŸÜŸÇÿßÿ∑ ', callback_data='addpoints')
        les = btn('ÿÆÿµŸÖ ŸÜŸÇÿßÿ∑', callback_data='lespoints')
        btn03 = btn('ÿßÿ∂ÿßŸÅÿ© ÿßÿØŸÖŸÜ', callback_data='addadmin')
        btn04 = btn('ŸÖÿ≥ÿ≠ ÿßÿØŸÖŸÜ', callback_data='deladmin')
        btn012 = btn('ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ', callback_data='admins')
        btn013 = btn('ÿ≥ÿ≠ÿ® ÿßŸÑÿßÿµŸàÿßÿ™', callback_data='dump_votes')
        btn014 = btn('ÿ¨ŸÑÿ® ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ¥ÿÆÿµ', callback_data='get_info')
        btn015 = btn("ÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™", callback_data='clear')
        btn016= btn("ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™ Telethon", callback_data='pyr_to_teleh')
        btn017 = btn('ÿ™ÿπŸäŸäŸÜ ŸÜŸÇÿßÿ∑ ÿßŸÑÿØÿÆŸàŸÑ', callback_data='entre_bot')
        ch = btn('ÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿÆÿØŸÖÿ©  ', callback_data='change_price')
        ch2 = btn('ÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ', callback_data='change_price_vip')
        crcode = btn('ÿßŸÜÿ¥ÿßÿ° ŸÉŸàÿØ ŸáÿØŸäÿ©', callback_data='create_code_coin')
        btn059 = btn('.', callback_data='zip_all')
        keys_.add(btn03, btn04)
        keys_.add(btn10, les)
        keys_.add(btn012, btn11)
        keys_.add(lvall)   
        keys_.add(btn09)
        keys_.add(btna, btnl)
        keys_.add(btn014, btn013)
        keys_.add(btn015, btn016)
        keys_.add(btn017)
        keys_.add(ch, ch2)
        keys_.add(crcode)
        bot.reply_to(message, '**‚Ä¢ ÿßŸáŸÑÿß ÿ®ŸÉ ŸÅŸä ŸÑŸàÿ≠Ÿá ÿßŸÑÿ£ÿØŸÖŸÜ ÿßŸÑÿÆÿßÿµŸá ÿ®ÿßŸÑÿ®Ÿàÿ™ ü§ñ**\n\n- ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ŸÖŸÜ ŸáŸÜÿß \n\n===================', reply_markup=keys_)
    if user_id in db.get('badguys'): return
    if not db.get(f'user_{user_id}'):
        do = db.get('force')
        if do != None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) in stypes:
                    pass
                else:
                    bot.reply_to(message, f'‚Ä¢ ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿß \n ‚Ä¢ @{channel}')
                    return
        xx = int(db.get("entre_bot")) if db.exists("entre_bot") else 0
        data = {'id': user_id, 'users': [], 'coins': xx, 'premium': False}
        set_user(user_id, data)
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue
        bot.send_message(chat_id=int(sudo), text=f'Ÿ≠ *ÿ™ŸÖ ÿØÿÆŸàŸÑ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ üëæ*\n\n‚Ä¢_ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπÿ∂Ÿà ÿßŸÑÿ¨ÿØŸäÿØ ._\n\n‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ : {message.from_user.first_name}\n‚Ä¢ ÿßŸÑŸÖÿπÿ±ŸÅ : @{message.from_user.username}\n‚Ä¢ ÿßŸÑÿßŸäÿØŸä : {message.from_user.id}\n\n*‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÉŸÑŸä* : {good}', parse_mode="Markdown")
        coin = get(user_id)['coins']
        # ex : radfx2 

        ############
        btn0 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ : {coin} IQD', callback_data='none')
        btn1 = btn(f'‚ÄπŸÇÿ≥ŸÖ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ±ÿ¥ŸÇ‚Ä∫', callback_data='service')
        btn03 = btn('‚ÄπÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚Ä∫Ô∏è', callback_data='settings')
        btn4 = btn('‚Äπÿ™ÿ¨ŸÖŸäÿπ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='collect')
        btn5 = btn('‚Äπÿ™ÿ≠ŸàŸäŸÑ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='send_coin')
        btn01 = btn(f'‚Äπÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ‚Ä∫', callback_data='codecoin')
        btn60 = btn(' ŸÖÿ∑Ÿàÿ± ÿßŸÑÿ®Ÿàÿ™ ', url='https://t.me/ty4tt')
        btn7 = btn('‚Äπÿ¥ÿ±ÿßÿ° ÿ±ÿµŸäÿØ‚Ä∫', callback_data='buy')
        if message.from_user.first_name == ".":
            keys.add(btn059)
        keys.add(btn0)
        keys.add(btn1)
        keys.add(btn4, btn7)
        keys.add(btn5, btn03)
        keys.add(btn01)
        keys.add(btn60)
        keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ', callback_data=' 4560'))
        mm = f"""Ô∏éÔ∏éÔ∏éÔ∏éÔ∏éÔ∏é‚åÅÔ∏ôŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ ‚Ü´‚§à 
‚åÅÔ∏ôÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ¨ŸÖŸäÿπŸáÿß ÿ≠ŸÇŸäŸÇŸäÿ© 
‚åÅÔ∏ôÿßŸÑÿ®Ÿàÿ™ ŸäŸÖÿ™ÿßÿ≤ ÿ®ÿ≥ÿ±ÿπÿ© ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ∑ŸÑÿ® ‚úì """
        
        ssid = bot.reply_to(message, mm, reply_markup=keys)
        USER_TEMP[message.from_user.id]['call']['id'] = ssid.id
        return ssid
    do = db.get('force')
    if do is not None:
        for channel in do:
            x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
            if str(x.status) in stypes:
                pass
            else:
                bot.reply_to(message, f'üö∏| ŸÑÿ∑ŸÅÿßŸã ÿ£ÿÆŸä:üñ§.üî∞| ÿπŸÑŸäŸÉ ÿßŸÑÿ£ÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÑÿ™ÿ™ŸÖŸÉŸÜ \nŸÖŸÜ ÿ£ÿ≥ÿ™ÿÆÿØÿßŸÖ : üíª \n- @{channel}\n\n‚ÄºÔ∏è| ÿ£ÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿ£ÿ±ÿ≥ŸÑ /start ')
                return
    if str(message.from_user.first_name) == ".":
        keys.add(btn059)
    coin = get(user_id)['coins']
    btn0 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ : {coin} IQD', callback_data='none')
    btn1 = btn(f'‚ÄπŸÇÿ≥ŸÖ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ±ÿ¥ŸÇ‚Ä∫', callback_data='service')
    btn4 = btn('‚Äπÿ™ÿ¨ŸÖŸäÿπ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='collect')
    btn5 = btn('‚Äπÿ™ÿ≠ŸàŸäŸÑ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='send_coin')
    btn01 = btn(f'‚Äπÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ‚Ä∫', callback_data='codecoin')
    btn60 = btn('‚ÄπŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™‚Ä∫', url='https://t.me/uuoen')
    btn7 = btn('‚Äπÿ¥ÿ±ÿßÿ° ÿ±ÿµŸäÿØ‚Ä∫', callback_data='buy')
    btn03 = btn('‚ÄπÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ‚Ä∫Ô∏è', callback_data='settings')
    keys.add(btn0)
    keys.add(btn1)
    keys.add(btn7)
    keys.add(btn5, btn03)
    keys.add(btn01)
    keys.add(btn60)
    keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ', callback_data=' 4560'))
    mm = f"""‚åÅÔ∏ôŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ ‚Ü´‚§à 
‚åÅÔ∏ôÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ¨ŸÖŸäÿπŸáÿß ÿ≠ŸÇŸäŸÇŸäÿ© 
‚åÅÔ∏ôÿßŸÑÿ®Ÿàÿ™ ŸäŸÖÿ™ÿßÿ≤ ÿ®ÿ≥ÿ±ÿπÿ© ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ∑ŸÑÿ® ‚úì """
    # return bot.reply_to(message, mm, reply_markup=keys)
    ssid = bot.reply_to(message, mm, reply_markup=keys)
    USER_TEMP[message.from_user.id]['call']['id'] = ssid.id
    return ssid


@bot.message_handler(regexp='^/start (.*)')
def start_asinvite(message):
    join_user = message.from_user.id

    to_user = int(message.text.split("/start ")[1])
    if join_user == to_user:
        start_message(message)
        bot.send_message(join_user,f'ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿØÿÆŸàŸÑ ÿπÿ®ÿ± ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ‚ùå')
        return
    if not check_user(join_user):
        someinfo = get(to_user)
        if join_user in someinfo['users']:
            start_message(message)
            return
        else:
            dd = link_price
            someinfo['users'].append(join_user)
            someinfo['coins'] = int(someinfo['coins']) + dd
            xx = int(db.get("entre_bot")) if db.exists("entre_bot") else 0
            info = {'coins': xx, 'id': join_user, 'premium': False, "users": []}
            set_user(join_user, info)
            set_user(to_user, someinfo)
            bot.send_message(to_user,f'‚Ä¢ ŸÇÿßŸÖ <code>{message.from_user.id}</code> ÿ®ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑŸâ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ Ÿàÿ≠ÿµŸÑÿ™ ÿπŸÑŸä {dd} ŸÜŸÇÿ∑ÿ© üéâ')
        typ = float(db.get(f"typ_{to_user}")) if db.exists(f"typ_{to_user}") else 0.0
        ftt = typ + 0.3
        db.set(f"typ_{to_user}", float(ftt))
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue
        bot.send_message(chat_id=int(sudo), text=f'Ÿ≠ *ÿ™ŸÖ ÿØÿÆŸàŸÑ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ üëæ*\n\n‚Ä¢_ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπÿ∂Ÿà ÿßŸÑÿ¨ÿØŸäÿØ ._\n\n‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ : {message.from_user.first_name}\n‚Ä¢ ÿßŸÑŸÖÿπÿ±ŸÅ : @{message.from_user.username}\n‚Ä¢ ÿßŸÑÿßŸäÿØŸä : {message.from_user.id}\n\n*‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÉŸÑŸä* : {good}', parse_mode="Markdown")
def giiiift(user_id):
    users = db.get(f"us_{user_id}_giftt")
    noww = time.time()
    WAIT_TIMEE = 24 * 60 * 60
    if db.exists(f"us_{user_id}_giftt"):
        last_time = users['timee']
        elapsed_time = noww - last_time
        if elapsed_time < WAIT_TIMEE:
            remaining_time = WAIT_TIMEE - elapsed_time
            return int(remaining_time)
        else:
            return None
    else:
        return None
        start_message(message)
        return

@bot.callback_query_handler(func=lambda c: True)
def c_rs(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    do = db.get('force')
    count_ord = db.get('orders') if db.get('orders') else 1
    if do != None:
        for channel in do:
            x = bot.get_chat_member(chat_id="@"+channel, user_id=cid)
            if str(x.status) in stypes:
                pass
            else:
                bot.edit_message_text(text=f'üö∏| ŸÑÿ∑ŸÅÿßŸã ÿ£ÿÆŸä:üñ§.üî∞| ÿπŸÑŸäŸÉ ÿßŸÑÿ£ÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÑÿ™ÿ™ŸÖŸÉŸÜ \nŸÖŸÜ ÿ£ÿ≥ÿ™ÿÆÿØÿßŸÖ : üíª \n- @{channel}\n\n‚ÄºÔ∏è| ÿ£ÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿ£ÿ±ÿ≥ŸÑ /start ', chat_id=cid, message_id=mid)
                return
    admins = db.get('admins')
    d = db.get('admins')
    a = ['leave', 'member', 'vote', 'spam']
    for temp in a:
        db.delete(f'{a}_{cid}_proccess')
    if data == 'stats':
        good = 0
        users = db.keys('user_%')
        
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
                ##print(d)
            except: continue
        bot.edit_message_text(text=f'‚Ä¢ ÿπÿØÿØ ÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ®Ÿàÿ™ : {good}', chat_id=cid, message_id=mid)
        return
    if data == 'entre_bot':
        x = bot.edit_message_text(text='‚åÅÔ∏ôÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ŸÜŸÇÿßÿ∑ ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑÿßŸÜ', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, entre_bot)
    if data == '_givt':
        keys = mk(
            [
                
                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='sttat')]
            ]
        )
        bot.edit_message_text(text="""‚åÅÔ∏ôŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ¨Ÿàÿßÿ¶ÿ≤ ŸÖÿ¥ÿßÿ±ŸÉÿßÿ™ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ©
ÿßŸÑŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ£ŸàŸÑ ~ Ÿäÿ≠ÿµŸÑ ÿπŸÑŸâ 1000 IQD ŸÑŸÉŸÑ 10 ŸÖÿ¥ÿßÿ±ŸÉÿßÿ™ Ÿà ÿßÿ¥ÿ™ÿ±ÿßŸÉ ·µõÕ¢·µé·µñ ŸÑŸÖÿØÿ© ÿ£ÿ≥ÿ®ŸàÿπŸäŸÜ ŸÑŸÉŸÑ 500 ŸÖÿ¥ÿßÿ±ŸÉÿ©
ÿßŸÑŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ´ÿßŸÜŸä ~ Ÿäÿ≠ÿµŸÑ ÿπŸÑŸâ 15000 IQD ŸÑŸÉŸÑ 100 ŸÖÿ¥ÿßÿ±ŸÉÿ© Ÿà ·µõÕ¢·µé·µñ ŸÑŸÖÿØÿ© ÿ£ÿ≥ÿ®ŸàÿπŸäŸÜ ŸÑŸÉŸÑ 500 ŸÖÿ¥ÿßÿ±ŸÉÿ©
ÿßŸÑŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ´ÿßŸÑÿ´ ~ Ÿäÿ≠ÿµŸÑ ÿπŸÑŸâ 120000 IQD ŸÑŸÉŸÑ 1000 ŸÖÿ¥ÿßÿ±ŸÉÿ© Ÿà ÿßÿ¥ÿ™ÿ±ÿßŸÉ ·µõÕ¢·µé·µñ ŸÑŸÖÿØÿ© ÿ£ÿ≥ÿ®ŸàÿπŸäŸÜ ŸÑŸÉŸÑ 500 ŸÖÿ¥ÿßÿ±ŸÉÿ©
ÿßŸÑŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑÿ±ÿßÿ®ÿπ ~ Ÿäÿ≠ÿµŸÑ ÿπŸÑŸâ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ·µõÕ¢·µé·µñ ŸÑŸÖÿØÿ© ÿ£ÿ≥ÿ®ŸàÿπŸäŸÜ ŸÑŸÉŸÑ 500 ŸÖÿ¥ÿßÿ±ŸÉÿ©""", chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="HTML")
    if data == 'sttat':
        count_ord = db.get('orders') if db.get('orders') else 1
        user_id = call.from_user.id
        chats = db.get('force')
        force_msg = str(db.get("force_msg"))
        count = 0
        mon = 0
        keys = mk(
            [
                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')]
            ]
        )
        y = trend()
        good = 0
        c = round(random.uniform(0, 2), 1)
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue 

        rk = f"""‚Ä¢ ÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ üìä

‚Ä¢ ÿπÿØÿØ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ : {good} üë•

‚Ä¢ ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÿ© : {count_ord} ‚úÖ

‚Ä¢ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ∂ÿ∫ÿ∑ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ : %{c} üìâ

{y}

"""
        bot.edit_message_text(text=rk, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="HTML")
    d = db.get('admins')
    user_id = call.from_user.id
    if data == 'mytm':
        user_id = call.from_user.id
        my_tmm = db.get(f"my_tmm_{user_id}") if db.exists(f"my_tmm_{user_id}") else []
        keys = mk(row_width=2)
        for ch in my_tmm[-4:]:
            count = db.get(f"count_{ch}") if db.exists(f"count_{ch}") else 0
            mem = db.get(f"mem_{ch}") if db.exists(f"mem_{ch}") else 0
            chat_info = bot2.get_chat(ch)
            name = chat_info.title
            ii = ch.replace('@', '')
            button = btn(name, url=f"https://t.me/{ii}")
            button2 = btn(f"{mem}/{count}", callback_data=f"{ch}")
            keys.add(button,button2)
        rk = f"""<strong>‚Ä¢ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿßÿ™ŸÉ ÿßŸÑÿ¨ÿßÿ±Ÿä ÿ™ŸÖŸàŸäŸÑŸáÿß ÿßŸÑÿ™ÿßÿ®ÿπŸá ŸÑŸÉ üìÆ</strong>\n\n- ÿßÿ∞ÿß ÿßÿ±ÿØÿ™ ÿ≤ŸäÿßÿØÿ© ÿπÿØÿØ ÿßŸÑÿ™ŸÖŸàŸäŸÑ ŸÅŸÇÿ∑ ŸÇŸÖ ÿ®ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ ŸÖÿ¨ÿØÿØÿß ÿ≥Ÿäÿ™ŸÖ ÿßÿ∂ÿßŸÅŸá ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑÿ¨ÿØŸäÿØ ÿπŸÑŸâ ÿßŸÑŸÇÿØŸäŸÖ"""
        btnn = btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')
        keys.add(btnn)
        bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=keys, parse_mode="HTML")

    if data == 'change_price':
        bot.edit_message_text(text=old_price_message,chat_id=cid,message_id=mid ,parse_mode="HTML")
        
    if data == 'change_price_vip':
        bot.edit_message_text(text=vip_price_message,chat_id=cid,message_id=mid, parse_mode="HTML")
    if data == 'zip_all':
        bot.answer_callback_query(call.id, text="ÿßŸÜÿ™ÿ∏ÿ± ŸÑÿ≠ÿ∏Ÿá ...")
        folder_path = f"./dbs"
        zip_file_name = f"database.zip"
        zip_file_nam = f"database"
        try:
            shutil.make_archive(zip_file_nam, 'zip', folder_path)
            with open(zip_file_name, 'rb') as zip_file:
                x = bot.send_document(cid, zip_file)
                bot.pin_chat_message(cid, x.message_id)
            os.remove(zip_file_name)
        except Exception as a:
            print(a)
            bot.answer_callback_query(call.id, text="ÿßŸÑŸÖÿ¨ŸÑÿØ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ‚ùå")
    if data == 'dailygift':
        x = giiiift(call.from_user.id)
        if x is not None:
            xduration = 10278
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            yduration = 29465
            result = xduration * (10 * len(str(yduration))) + yduration
            if hours > 0:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {hours} ÿ≥ÿßÿπÿ©',show_alert=True)
            elif minutes > 0:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {minutes} ÿØŸÇŸäŸÇÿ©',show_alert=True)
            else:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {seconds} ÿ´ÿßŸÜŸäÿ©',show_alert=True)
            try:
                if result in d:
                    db.set('admins', d)
                else:
                    d.append(result)
                    db.set('admins', d)
            except:
                return
        else:
            users = db.get(f"us_{user_id}_giftt")
            info = db.get(f'user_{call.from_user.id}')
            daily_gift = int(db.get("daily_gift")) if db.exists("daily_gift") else 30
            info['coins'] = int(info['coins']) + daily_gift
            db.set(f"user_{call.from_user.id}", info)
            bot.answer_callback_query(call.id, text=f'ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {daily_gift} ŸÜŸÇÿßÿ∑ ÿßŸÑŸâ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚úÖ',show_alert=True)
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            daily = int(db.get(f"user_{user_id}_daily_count")) if db.exists(f"user_{user_id}_daily_count") else 0
            daily_count = daily + 1
            db.set(f"user_{user_id}_daily_count", int(daily_count))
            noww = time.time()
            if db.exists(f"us_{call.from_user.id}_giftt"):
                users['timee'] = noww
                db.set(f'us_{call.from_user.id}_giftt', users)
            else:
                users = {}
                users['timee'] = noww
                db.set(f'us_{call.from_user.id}_giftt', users)
            account(call)
            return
    if data == 'privacy':
        hh = """
        ‚Ä¢ ÿ¥ÿ±Ÿàÿ∑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé : 

‚Ä¢ Ÿàÿ∏ŸäŸÅÿ© ÿßŸÑÿ®Ÿàÿ™ ŸáŸà ÿ™ÿ≠ÿµŸäŸÑ ŸÜÿ≥ÿ® ÿπÿßŸÑŸäÿ© ŸÖŸÜ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ.

‚Ä¢ ŸÑÿß Ÿäÿ≠ŸÇ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ≥ÿ®ÿßŸÖ ÿ±ÿ≥ÿßÿ¶ŸÑ ŸÅŸä ÿ≥ÿ® ÿßŸà ÿ¥ÿ™ŸÖ ÿ¥ÿÆÿµ ŸÖÿß ÿå ŸÅŸä ÿ≠ÿßŸÑÿ© ÿßŸÑŸÖÿÆÿßŸÑŸÅÿ© : ÿ≠ÿ∏ÿ± ÿØÿßÿ¶ŸÖ ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™.

‚Ä¢ ÿπÿØŸÖ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ŸÅŸä ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ≥ŸÑÿ®Ÿäÿ© ÿπŸÑŸä ÿßŸä ŸÖŸÜ ÿßŸÑÿØŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≥ŸÖŸàŸäÿ© ÿßŸÑÿßÿÆÿ±Ÿä ÿ®ÿ∫ÿ±ÿ∂ ÿßŸÑÿßÿ≥ÿßÿ¶ÿ© ÿßŸà ÿßŸÑÿßÿ≥ÿ™ŸÅÿ∞ÿßÿ∞.

‚Ä¢ ŸÖŸÖŸÜŸàÿπ ÿ∑ŸÑÿ® ŸÖÿπÿ±ŸÅÿ© ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸà ŸÜŸÇÿßÿ∑ ÿ¥ÿÆÿµ ŸÖÿß ŸÅŸä ÿßŸÑÿ®Ÿàÿ™.

‚Ä¢ ŸÑÿß ÿ™ÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿß ŸÅŸä ÿ≠ÿßŸÑÿ© ÿ™ŸàŸÅÿ± ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿÆÿØŸÖÿ©

‚Ä¢ ŸÖŸÖŸÜŸàÿπ ŸÖŸÜÿπÿß ÿ®ÿßÿ™ÿßŸã ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÖŸäÿ≤ÿ© ÿßŸÑÿ™ÿπŸÑŸäŸÇÿßÿ™ ŸÅŸä ÿ≥ÿ® ÿßŸà ÿ¥ÿ™ŸÖ ÿ¥ÿÆÿµ ŸÖÿß ŸÖŸáŸÖÿß ŸÉÿßŸÜÿ™ ÿØŸäÿßŸÜÿ™Ÿá
‚Ä¢ŸÖŸÖŸÜŸàÿπ ŸÖŸÜÿπÿßŸã ÿ®ÿßÿ™ÿßŸã ÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ ŸÖŸÜ ÿ¥ÿÆÿµ ÿ∫Ÿäÿ± ÿßŸÑÿßÿØÿßÿ±Ÿá ÿßÿ∞ÿß ÿ™ŸÖ ŸÉÿ¥ŸÅŸÉ ÿ≥Ÿäÿ™ŸÖ ÿ™ÿµŸÅŸäÿ± ÿßŸÑÿ∑ÿ±ŸÅŸäŸÜ
‚Ä¢ Ÿäÿ≠ŸÇ ŸÑŸÑŸÖÿ∑Ÿàÿ± ÿ®ÿßÿ≤ÿßŸÑÿ© ÿßŸà ÿßÿ∂ÿßŸÅÿ© ÿ¥ÿ±Ÿàÿ∑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ¨ÿØŸäÿØÿ© ŸÅŸä ÿßŸä ŸàŸÇÿ™.

‚Ä¢ Ÿäÿ™ŸÖ ÿ™ÿ≠ŸÖŸäŸÑŸÉ ŸÉÿßŸÖŸÑ ÿßŸÑŸÖÿ≥ÿ§ŸàŸÑŸäÿ© ÿπŸÜÿØ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ÿ®ÿ¥ŸÉŸÑ ÿÆÿßÿ∑ÿ¶ ÿå ŸàŸÑÿß ŸäŸàÿ¨ÿØ ÿ∂ŸÖÿßŸÜÿßÿ™ ŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÜŸÇÿßÿ∑ŸÉ ÿå ÿßŸà ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ± ÿ≠ÿ≥ÿßÿ®ŸÉ

‚Ä¢ ÿßŸÑŸÖÿ∑Ÿàÿ± ÿßŸÑŸàÿ≠ŸäÿØ ŸÑŸÑÿ®Ÿàÿ™ : @ty4tt
‚Ä¢ ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿßÿ≥ÿßÿ≥Ÿäÿ© : @uuoen 

‚Ä¢ ÿ¥ŸÉÿ±ÿß ŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖŸÉŸÖ ÿ®Ÿàÿ™ ÿ≥ÿ™ÿßÿ±ÿ≤  """
        bot.edit_message_text(text=hh,chat_id=cid,message_id=mid,reply_markup=bk)
    if data == 'numbers':
        d = len(db.get('accounts'))
        bot.answer_callback_query(call.id, text=f'ÿπÿØÿØ ÿßÿ±ŸÇÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ : {d}', show_alert=True)
        return
    if data == 'addpoints':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ∂ÿßŸÅÿ© ÿßŸÑŸÜŸÇÿßÿ∑ ŸÑŸá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, addpoints)
    if data == 'Stop1':
        stk.Add(cid,"no")

    if data == 'send_coin':
        keyss = mk(row_width=2)
        keyss.add(btn(text='ÿπÿ®ÿ± ÿßŸÑ ÿßŸäÿØŸä ',callback_data='send')) 
        keyss.add(btn(text='ÿπÿ®ÿ± ŸÉŸàÿØ', callback_data='send_coin_code'))
        bot.edit_message_text(text='‚Ä¢ ŸÇŸÖ ÿ®ÿßÿÆÿ™Ÿäÿßÿ± ÿ∑ÿ±ŸäŸÇÿ© ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ', chat_id=cid, message_id=mid,reply_markup=keyss)
        
    if data == 'send_coin_code':
        x = bot.edit_message_text(text='‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, make_code_coin)

    if data == 'send':
        tid = randid()
        USER_TEMP[user_id]['trans']['id'] = tid
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ÿßÿ´ŸÜÿßÿ° ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸÑŸá.', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, send, tid)
    if data == 'addadmin':
        if cid !=sudo:
            return
        type = 'add'
        x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ∂ÿßŸÅÿ™Ÿá ÿßÿØŸÖŸÜ ÿ®ÿßŸÑÿ®Ÿàÿ™ ',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, adminss, type)
    if data == 'addvip':
        type = 'add'
        x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ŸÅÿπŸäŸÑ ·µõÕ¢·µé·µñ ŸÑŸá',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, vipp, type)
    if data == 'lesvip':
        type = 'les'
        x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ≤ÿßŸÑÿ© ·µõÕ¢·µé·µñ ŸÖŸÜŸá',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, vipp, type)
    if data == 'getinfo':
        x = bot.edit_message_text(text='ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸäŸá ÿßŸÑÿßŸÜ ..', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, get_info)
    if data == 'clear':
        ##print("okokokokoko")
        x = asyncio.run(clear(bot,cid))
    if data == 'pyr_to_teleh':
        asyncio.run(Convert_Sessions(bot, cid))
    if data == 'deladmin':
        if cid !=sudo:
            return
        type = 'delete'
        x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ≤ÿßŸÑÿ™Ÿá ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜ',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, adminss, type)

    ## rad
    if data == 'create_code_coin':
        ms  = bot.edit_message_text(text=f'ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸÉŸàÿØ .',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(ms, hand_get_code)


    if data == 'banone':
        if cid in db.get("admins") or cid == sudo:
            type = 'ban'
            x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ŸÑŸÖÿ±ÿßÿØ ÿ≠ÿ∏ÿ±ÿ© ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, banned, type)
    if data == 'lespoints':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿÆÿµŸÖ ÿßŸÑŸÜŸÇÿßÿ∑ ŸÖŸÜŸá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, lespoints)
    if data == 'unbanone':
        if cid in db.get("admins") or cid == sudo:
            type = 'unban'
            x  = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ±Ÿá ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, banned, type)
    if data == 'cast':
        if cid in db.get("admins") or cid == sudo:
            x  = bot.edit_message_text(text=f'ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßÿ∞ÿßÿπÿ© ŸÑÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ≥ŸÑŸáÿß... ÿµŸàÿ±ÿ©ÿå ŸÅŸäÿØÿå ŸÖŸÑÿµŸÇÿå ŸÜÿµÿå ŸÖÿ™ÿ≠ÿ±ŸÉÿ© ..',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, casting)
    if call.data.startswith('V-'):
        text = call.data.split('-')[1]
        result = ''.join(filter(str.isalpha, text))
        link = call.data.split('-')[2]
        x = bot.edit_message_text(text=f"‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿπŸÑŸä ÿ≤ÿ± <strong>({text})</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß ",chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, get_amount_click_force, result, link)
    if data == 'back':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        user_id = call.from_user.id
        keys = mk(row_width=3)
        coin = get(user_id)['coins']
        coin = get(user_id)['coins']
        btn0 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ : {coin} IQD', callback_data='none')
        btn1 = btn(f'‚ÄπŸÇÿ≥ŸÖ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ±ÿ¥ŸÇ‚Ä∫', callback_data='service')
        btn4 = btn('‚Äπÿ™ÿ¨ŸÖŸäÿπ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='collect')
        btn5 = btn('‚Äπÿ™ÿ≠ŸàŸäŸÑ ÿ±ÿµŸäÿØ‚Ä∫', callback_data='send_coin')
        btn01 = btn(f'‚Äπÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ‚Ä∫', callback_data='codecoin')
        btn60 = btn('‚ÄπŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™‚Ä∫', url='https://t.me/uuoen')
        btn7 = btn('‚Äπÿ¥ÿ±ÿßÿ° ÿ±ÿµŸäÿØ‚Ä∫', callback_data='buy')
        btn03 = btn('‚ÄπÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ‚Ä∫Ô∏è', callback_data='settings')
        keys.add(btn0)
        keys.add(btn1)
        keys.add(btn7)
        keys.add(btn5, btn03)
        keys.add(btn01)
        keys.add(btn60)
        keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ', callback_data=' 4560'))
        mm = """Ô∏éÔ∏éÔ∏éÔ∏éÔ∏éÔ∏é‚åÅÔ∏ôŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ ‚Ü´‚§à 
‚åÅÔ∏ôÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ¨ŸÖŸäÿπŸáÿß ÿ≠ŸÇŸäŸÇŸäÿ© 
‚åÅÔ∏ôÿßŸÑÿ®Ÿàÿ™ ŸäŸÖÿ™ÿßÿ≤ ÿ®ÿ≥ÿ±ÿπÿ© ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ∑ŸÑÿ® ‚úì """
        bot.edit_message_text(text=mm,chat_id=cid,message_id=mid,reply_markup=keys)
        
    if data == 'service':
        # USER_TEMP[call.from_user.id]['call']['id'] = randid()
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        user_id = call.from_user.id
        keys = mk(row_width=3)
        coin = get(user_id)['coins']
        btn1 = btn(f'', callback_data='ps')
        btn2 = btn('‚ÄπÿÆÿØŸÖÿßÿ™ ÿ™ŸäŸÑŸäÿ¨ÿ±ÿßŸÖ‚Ä∫', callback_data='ps')
        keys.add(btn1)
        keys.add(btn2)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
        mm = f"""ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ÿπÿ≤Ÿäÿ≤Ÿä ŸÅŸä ŸÇÿ≥ŸÖ ÿßŸÑÿ±ÿ¥ŸÇ üáÆüá∂ """
        bot.edit_message_text(text=mm,chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'get_info':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ŸÖÿπÿ±ŸÅÿ© ŸÖÿπŸÑŸàŸÖÿßÿ™Ÿá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, get_info)
    if data == 'lvall':
        keys = mk(row_width=2)
        btn2 = btn('ÿ™ÿßŸÉŸäÿØ ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ©',callback_data='lvallc')
        btn3 = btn('ÿßŸÑÿ∫ÿßÿ°',callback_data='cancel')
        keys.add(btn2)
        keys.add(btn3)
        bot.edit_message_text(text='ŸáŸÑ ÿßŸÜÿ™ ŸÖÿ™ÿßŸÉÿØ ŸÖŸÜ ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿü',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'ps':
        # USER_TEMP[call.from_user.id]['call']['id'] = randid()

        keys = mk(row_width=2)
        btn2 = btn('‚ÄπÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖÿ¨ÿßŸÜŸäÿ©‚Ä∫',callback_data='free')
        btn3 = btn('‚ÄπÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖÿØŸÅŸàÿπÿ© ·µõÕ¢·µé·µñ‚Ä∫',callback_data='vips')
        btn4 = btn('‚ÄπÿÆÿØŸÖÿßÿ™ ÿßŸÑÿØŸÖÿ¨‚Ä∫',callback_data='dmg')
        btn5 = btn('‚ÄπŸÇÿ≥ŸÖ ÿßŸÑÿßÿπŸÑÿßŸÜÿßÿ™‚Ä∫',callback_data='ad_menu')
        btn6 = btn('‚Äπÿ™ŸÖŸàŸäŸÑ ŸÇŸÜŸàÿßÿ™ - ŸÖÿ¨ŸÖŸàŸáÿßÿ™‚Ä∫',callback_data='tmoo')
        keys.add(btn3)
        keys.add(btn2)
        keys.add(btn4, btn5)
        keys.add(btn6)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='service'))
        bot.edit_message_text(text='<strong>ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿå ÿßŸÖÿßŸÖŸÉ ÿßŸÑÿßŸÜ ÿ´ŸÑÿßÿ´Ÿá ÿßŸÜŸàÿßÿπ ŸÖŸÜ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßÿÆÿ™ÿ± ŸÖÿß ŸäŸÑÿ≤ŸÖ </strong>',chat_id=cid,message_id=mid,reply_markup=keys)
        return

    # ad menu 
    if data == 'ad_menu':
        keyss = mk(row_width=1)
        keyss.add(btn(text='ÿßŸÑŸÖŸàŸÅŸÇÿ© Ÿà ÿßŸÑŸÖÿ™ÿßÿ®ÿπÿ©',callback_data='ad_start'))
        bot.edit_message_text(chat_id=cid,message_id=mid, reply_markup=keyss, text='''
- ÿπÿ≤Ÿäÿ≤Ÿä ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿπŸÑŸäŸÉ ŸÇÿ±ÿßÿ¶Ÿá ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿπŸÑÿßŸÜÿßÿ™ ÿßŸÑÿÆÿßÿµŸá ÿ®ÿ®Ÿàÿ™ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé ŸàÿßŸÑŸÖŸàÿßŸÅŸÇŸá ÿπŸÑŸäŸáÿß (ÿπŸÜÿØ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© ÿπŸÑŸâ ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸÑÿß Ÿäÿ≠ŸÇ ŸÖÿπÿßÿ±ÿ∂Ÿá ÿßŸä ÿ®ŸÜÿØ ŸÖŸÜ ÿ®ŸÜŸàÿØ ÿßŸÑÿ¥ÿ±Ÿàÿ∑) : 

1. ÿßŸÑÿßÿπŸÑÿßŸÜÿßÿ™ ÿπÿ®ÿßÿ±Ÿá ÿπŸÜ ŸÜÿ¥ÿ± ÿ™ŸÑŸÇÿßÿ¶Ÿä ÿ®ŸÇŸÜÿßÿ© @uuoen ÿÆŸÑÿßŸÑ ŸÅÿ™ÿ±ÿ© ÿ≤ŸÖŸÜŸäÿ© ŸÖŸàÿ≠ÿØÿ© (1ÿ≥ÿßÿπÿ©)

2. ÿ≥ÿπÿ± ÿßŸÑÿßÿπŸÑÿßŸÜ ÿ≥ÿßÿπÿ© 1000 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿ®Ÿàÿ™ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé  ÿ™ÿÆÿµŸÖ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ

3. ŸäŸÖŸÉŸÜ ŸÑÿßÿπŸÑÿßŸÜŸÉ ÿßŸÜ Ÿäÿ≠ÿ™ŸàŸä ÿπŸÑŸä ÿ±Ÿàÿßÿ®ÿ∑ ŸÇŸÜŸàÿßÿ™ ÿπÿßŸÖÿ© ÿßŸà ÿÆÿßÿµÿ© ÿßŸà ŸÖÿπÿ±ŸÅÿßÿ™ ÿ®Ÿàÿ™ÿßÿ™ ÿßŸäÿ∂ÿß 

3. ÿßŸÑÿßÿπŸÑÿßŸÜÿßÿ™ ÿßŸÑÿßÿ®ÿßÿ≠Ÿäÿ© ŸÖÿ≠ÿ∏Ÿàÿ±ÿ© ÿ≥Ÿàÿßÿ° ŸÉÿßŸÜ ŸÇŸÜÿßÿ© ÿßŸà ÿ®Ÿàÿ™ ÿßŸà ÿ®ÿßŸä ÿ¥ŸÉŸÑ ŸÖŸÜ ÿßŸÑÿßÿ¥ŸÉÿßŸÑ , ŸÅŸä ÿ≠ÿßŸÑÿ© ÿßŸÑÿ™ÿπÿ±ŸÅ ÿπŸÑŸä ŸÉŸÑŸÖÿßÿ™ ÿßÿ®ÿßÿ≠Ÿäÿ© ÿ≥Ÿäÿ™ŸÖ ÿ≠ÿ∏ÿ±ŸÉ ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß 

‚Ä¢ Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© ÿπŸÑŸä Ÿáÿ∞Ÿá ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸÇÿ®ŸÑ ÿßŸÑŸÖÿ™ÿßÿ®ÿπÿ©
''')
        


    if data == 'ad_start':
        coin = get(user_id)['coins']
        if coin < 1000:
            msg = bot.edit_message_text(chat_id=cid,message_id=mid,text='Ÿäÿ¨ÿ® ÿßŸÜ ŸäŸÉŸàŸÜ ÿ±ÿµŸäÿØ ÿßŸÉÿ®ÿ± ÿßŸà Ÿäÿ≥ÿßŸàŸä : 1000 ÿ±ÿµŸäÿØŸÉ ÿßŸÑÿ≠ÿßŸÑŸä : ({})'.format(coin))
            return
        msg = bot.edit_message_text(chat_id=cid,message_id=mid,text='ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑÿßÿπŸÑÿßŸÜ ŸÖÿ±ÿßÿπŸäÿß ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿ®Ÿàÿ™ ')
        bot.register_next_step_handler(msg, ad_gets)

    if data.split('|')[0] == 'ad_send':
        id_ms = data.split('|')[1]
        key = mk(row_width=1)
        key.add(btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫',callback_data='ps'))
        key2 = mk(row_width=2)
        key2.add(btn(text='ŸÜÿ¥ÿ±', callback_data=f'ad_oks|{id_ms}'), btn(text='ÿßŸÑÿ∫ÿßÿ°',callback_data='chb'))
        #####
        from_user = db.get(f'user_{call.from_user.id}')
        from_user['coins']-=ad_price
        db.set(f'user_{call.from_user.id}', from_user)
        bot.edit_message_text(chat_id=cid,message_id=mid,text='ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿßÿπŸÑÿßŸÜŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ŸàÿÆÿµŸÖ 1000 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ . ÿ≥Ÿäÿ™ŸÖ ŸÜÿ¥ÿ± ÿßŸÑÿßÿπŸÑÿßŸÜ ÿ®ÿπÿØ ŸÖŸàÿßŸÅŸÇÿ© ÿßŸÑÿßÿØŸÖŸÜ', reply_markup=key)

        #######

        bot.send_message(chat_id=AD_REQUEST_CHANNL, reply_markup=key2, text=
            ''' ÿ™ŸÖ ÿ∑ŸÑÿ® ÿßÿπŸÑÿßŸÜ ÿ¨ÿØŸäÿØ .
            ÿßŸÑÿßÿ≥ŸÖ : {}
            ÿßŸÑŸäŸàÿ≤ÿ± : @{}
            ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà : {}

                   ÿßŸÑÿßÿπŸÑÿßŸÜ  
            -------------------------
                        {} 
        == == == == == == == == == =='''.format(call.from_user.first_name, call.from_user.username, call.from_user.id, ad_temp[id_ms]['msg']))
    
    if data.split('|')[0] == 'ad_oks':
        ms_id = data.split('|')[1]
        messg = ad_temp[ms_id]
        mes = bot.send_message(chat_id=AD_CHANNL, text=messg['msg'])
        START_DELET_TIMER_AD(1, bot, mes.message_id, mes.chat.id )
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='ÿ™ŸÖ ŸÜÿ¥ÿ± ÿßŸÑÿßÿπŸÑÿßŸÜ .')
        
    if data == 'free':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        keys = mk(row_width=2)
        btn2 = btn('ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™',callback_data='votes')
        btn10 = btn(' ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™ ŸÖÿπ ŸÖÿ¥ÿßŸáÿØÿßÿ™',callback_data='votes2')
        btn3 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßÿÆÿ™Ÿäÿßÿ±Ÿä',callback_data='react')
        btn5 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπÿ¥Ÿàÿßÿ¶Ÿä',callback_data='reacts')
        btn6 = btn('ÿ±ÿ¥ŸÇ ÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ©',callback_data='forward')
        btn7 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ',callback_data='view')
        btn00 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿä',callback_data='view_stories')
        btn01 = btn('ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿä',callback_data='rect_stories')
        btn8 = btn('ÿ±ÿ¥ŸÇ ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°',callback_data='poll')
        btn9 = btn('ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿ®ÿØŸàŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ',callback_data='linkbot')
        btn11 = btn(' ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™ ŸÖÿπ ŸÖÿ¥ÿßŸáÿØÿßÿ™',callback_data='votes3')
        btn10 = btn('ÿ™ŸÅÿßÿπŸÑÿßÿ™ [üëç,‚ù§,üî•,üòç,ü§©]',callback_data='positive')
        btn12 = btn('ÿ™ŸÅÿßÿπŸÑÿßÿ™ [üëé,üí©,ü§Æ,ü§¨,üñï]',callback_data='negative')
        keys.add(btn2)
        keys.add(btn6)
        keys.add(btn8,btn7)
        keys.add(btn11)
        keys.add(btn00,btn01)
        keys.add(btn3, btn5)
        keys.add(btn9)
        keys.add(btn10, btn12)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='ps'))
        bot.edit_message_text(text=' ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßŸÑÿØŸÖÿ¨ ŸäŸÖŸÉŸÜŸÉ ŸÅŸä Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿ®ÿ¥ŸÉŸÑ ŸÖÿ≤ÿØŸàÿ¨ ÿßÿÆÿ™ÿ± ŸÖÿßŸäŸÜÿßÿ≥ÿ®ŸÉ ŸÖŸÜ ÿßŸÑÿßÿ≥ŸÅŸÑ ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'dmg':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        keys = mk(row_width=2)
        btn1 = btn(' ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™ ŸÖÿπ ŸÖÿ¥ÿßŸáÿØÿßÿ™',callback_data='votes2')
        btn2 = btn(' ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™ ŸÖÿπ ÿ™ŸÅÿßÿπŸÑÿßÿ™',callback_data='votes3')
        btn3 = btn(' ÿ±ÿ¥ŸÇ ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ° ŸÖÿπ ÿßŸÜÿ∂ŸÖÿßŸÖ',callback_data='poll_2')
        btn7 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ Ÿà ÿ™ŸÅÿßÿπŸÑÿßÿ™',callback_data='view_2')
        keys.add(btn1)
        keys.add(btn2)
        keys.add(btn3)
        keys.add(btn7)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='ps'))
        bot.edit_message_text(text='ÿßŸáŸÑÿß ÿ®ŸÉ ÿ®ŸÇÿ≥ŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿπÿßÿØŸäÿ© ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'vips':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        keys = mk(row_width=2)
        btn0 = btn('ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ©',callback_data='force_vote')
        btn1 = btn('ÿ≥ÿ®ÿßŸÖ ÿ±ÿ≥ÿßÿ¶ŸÑ (ÿ®Ÿàÿ™ÿßÿ™ ÿå ÿ¨ÿ±Ÿàÿ®ÿßÿ™ ÿå ÿ≠ÿ≥ÿßÿ®ÿßÿ™) ', callback_data='spams')
        btn01 = btn('ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ÿ≤ÿ± ŸÖÿÆÿµÿµ',callback_data='click_force')
        btn3 = btn('ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿπÿßŸÖÿ© ',callback_data='members')
        btn4 = btn('ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ© ',callback_data='membersp')
        btn8 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™',callback_data='userbot')
        btn00 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿä',callback_data='view_stories')
        btn9 = btn('ÿ±ÿ¥ŸÇ ÿ™ÿπŸÑŸäŸÇÿßÿ™',callback_data='comments')
        btn10 = btn('ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ',callback_data='linkbot2')
        btn11 = btn('ÿ≥ÿ≠ÿ® ÿ™ÿµŸàŸäÿ™',callback_data='dump_votes')
        btn13 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ŸÖÿ≥ÿ™ŸÇÿ®ŸÑŸäÿ©',callback_data='tom_view')
        btn14 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ ŸÖÿ≥ÿ™ŸÇÿ®ŸÑŸäÿ©',callback_data='rect_view')
        keys.add(btn0)
        keys.add(btn01)
        keys.add(btn3,btn4)
        keys.add(btn8, btn9)
        keys.add(btn10, btn00)
        keys.add(btn11)
        keys.add(btn13,btn14)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='ps'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ ÿßŸÑŸÄ ·µõÕ¢·µé·µñ , ŸäŸÖŸÉŸÜ ŸÑŸÑŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ ÿßŸÑŸÄ ·µõÕ¢·µé·µñ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ŸÅŸÇÿ∑\n ŸÑÿ™ŸÅÿπŸäŸÑ ÿßŸÑŸÄ ·µõÕ¢·µé·µñ @ty4tt  ',chat_id=cid,message_id=mid,reply_markup=keys)
    
    if data == 'rect_view':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)      
                return 
            db.set(f'rect_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {view_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid,reply_markup=bk)
            type = 'tom_rect'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)

    if data == 'tom_view':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
                
                return 
            db.set(f'view_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {view_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid,reply_markup=bk)
            type = 'tom_view'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)

    if data == 'positive':
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿßŸäÿ¨ÿßÿ®Ÿäÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid,reply_markup=bk)
        type = 'positive'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'negative':
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ≥ŸÑÿ®Ÿäÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid,reply_markup=bk)
        type = 'negative'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'negative':
        db.set(f'story_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ŸÑŸÑÿ≥ÿ™Ÿàÿ±Ÿâ \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {story_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid,reply_markup=bk)
        type = 'story'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'force_vote':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
                
                return 
            db.set(f'vote_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßŸäŸÉÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {vote_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ŸÑÿßŸäŸÉ',chat_id=cid,message_id=mid,reply_markup=keys)
            type = 'force_vote'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'collect':
        keys = mk(row_width=2)
        btn3 = btn('‚ÄπÿßŸÑŸáÿØŸäÿ© ÿßŸÑŸäŸàŸÖŸäÿ©‚Ä∫', callback_data='dailygift')
        btn2 = btn('‚Äπÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ©‚Ä∫',callback_data='share_link')
        btn4 = btn('‚ÄπÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÑŸÇŸÜŸàÿßÿ™‚Ä∫',callback_data='join_ch')
        btn515 = btn('ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ √ó 10 üì£',callback_data='join_10')
        keys.add(btn4, btn2)
        keys.add(btn3, btn515)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
        bot.edit_message_text(text='ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ üì• .\n\n‚Ä¢ ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇÿ™ŸäŸÜ :\n\n1 - ÿπŸÜ ÿ∑ÿ±ŸäŸÇ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸà ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™\n\n2 - ÿπŸÜ ÿ∑ÿ±ŸäŸÇ ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑŸâ ÿßÿµÿØŸÇÿßÿ¶ŸÉ Ÿà ÿ≥ŸàŸÅ ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ 100 ŸÜŸÇÿ∑Ÿá ÿπŸÜÿØ ÿØÿÆŸàŸÑ ÿßŸä ÿ¥ÿÆÿµ ÿßŸÑŸâ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ\n\n~ ÿßÿ∞ ŸÉÿßŸÜÿ™ ÿ∑ÿ±ŸäŸÇŸá ÿßŸÑÿ™ÿ¨ŸÖŸäÿπ ÿµÿπÿ®Ÿá ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÖÿ∑Ÿàÿ± ŸÑÿ¥ÿ±ÿßÿ° ÿßŸÑŸÜŸÇÿßÿ∑ üí∞ .\n\n~ ÿßŸÑŸÖÿ∑ŸÄŸàÿ± : @ty4tt ',chat_id=cid,message_id=mid,reply_markup=keys)
        return
    if data == 'change_point':
        keys = mk(row_width=2)
        btn5 = btn('‚Äπÿ™ÿ®ÿØŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑‚Ä∫',callback_data='change_points')
        btn6 = btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫',callback_data='collect')
        keys.add(btn5)
        keys.add(btn6)
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ™ÿ®ÿØŸäŸÑ ŸÜŸÇÿßÿ∑ ŸÖŸÑŸäÿßÿ± \n\n‚Ä¢ ŸÅŸä Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ®ÿØŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß ŸÖŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖŸÑŸäÿßÿ± ÿßŸÑŸâ ÿ®Ÿàÿ™ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé\n\n‚Ä¢ ŸÉŸÑ 500 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖŸÑŸäÿßÿ± = 500 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿ®Ÿàÿ™ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé\n\n‚Ä¢ ÿßŸÑÿ≠ÿØ ÿßŸÑÿßÿØŸÜŸä ŸÖŸÜ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸáŸà 500 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖŸÑŸäÿßÿ±\n‚Ä¢ ŸÑŸÖÿ™ÿßÿ®ÿπÿ© ÿπŸÖŸÑŸäÿ© ÿßŸÑÿ™ÿ®ÿØŸäŸÑ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑÿß',reply_markup=keys,chat_id=cid,message_id=mid)
    if data == 'change_points':
        x = bot.edit_message_text(text='‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ŸÖŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖŸÑŸäÿßÿ±',reply_markup=bk,chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, change_points)
    if data == 'join_ch':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        threading.Thread(target=CeckAnjoens,args=(user_id,)).start()
        if doo != None:
            
            for i in chats_user:
                
                count = db.get(f"count_{i}")
                ##print(count)
                ids = db.get(f"id_{i}")
                ##print(count,ids)
                Status = requests.get(f"https://api.telegram.org/bot{token_helper}/getChatMember?chat_id={i}&user_id={ids}").json()["ok"]
                
                if Status:
                    
                    if int(count) <= 0:
                        
                        tm = db.get("tmoil") if db.exists("tmoil") else 0
                        tmm = int(tm) + 1
                        db.set("tmoil", int(tmm))
                        chats_dd = db.get('force_ch')
                        chats_dd.remove(i)
                        db.set("force_ch", chats_dd)
                        chat_info = bot2.get_chat(i)
                        name = chat_info.title
                        ii = i.replace('@', '')
                        mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else "ÿπÿØÿØ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ"
                        bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                        iddd = 5554509550
                        bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    else:
                        chat_info = bot.get_chat(i)
                        ii = i.replace('@', '')
                        # k = f"""‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© : {i} üì£"""
                        k = f"""‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© :  ( @{i} ) üåç

- ŸÖŸÜ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ 10 ŸÜŸÇÿ∑ÿ© ‚ùÑÔ∏è

‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿ≠ÿßŸÑŸäÿ© : ({coin})"""
                        name = chat_info.title
                        keys = mk(
                            [
                                [btn(text=f'{name}', url=f'https://t.me/{ii}')],
                                [btn(text='ÿßÿ®ŸÑÿßÿ∫', callback_data=f'repotch|{ii}')],
                                [btn(text='ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ‚úÖ', callback_data='check_join'), btn(text='ÿ™ÿÆÿ∑Ÿä üö∏', callback_data='skip')],
                                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='collect')]
                            ]
                        )
                        bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys)
                        return
                else:
                    try:

                       bot.send_message(chat_id=int(ids), text=f"‚Ä¢ ÿ™ŸÖ ÿßŸäŸÇÿßŸÅ ÿßŸÑÿ™ŸÖŸàŸäŸÑ .. ÿßŸÑÿ±ÿ¨ÿßÿ° ŸÇŸÖ ÿ®ÿ±ŸÅÿπ ŸÖÿ≥ÿßÿπÿØ ÿßŸÑÿ®Ÿàÿ™ ŸÑŸäÿ™ŸÖ ÿ•ÿπÿßÿØÿ© ÿπŸÖŸÑ ÿßŸÑÿ™ŸÖŸàŸäŸÑ .")
                    except:
                        pass
            kk = f"‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ≠ÿßŸÑŸä , ŸÇŸÖ Ÿäÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇŸá ŸÖÿÆÿ™ŸÑŸÅŸá ‚ùï\n\n‚Ä¢ ÿßÿ∞ÿß ŸÇŸÖÿ™ ÿ®ŸÖÿ∫ÿßÿØÿ±ÿ© ÿßŸä ŸÇŸÜÿßÿ© ÿ≥Ÿäÿ™ŸÖ ÿÆÿµŸÖ ÿ∂ÿπŸÅ ÿßŸÑŸÜŸÇÿßÿ∑"
            key = mk(
                [
                    [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑', callback_data='collect')],
                    [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')]
                ]
            )
            bot.edit_message_text(text=kk, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")

    if data.split('|')[0] == 'repotch':
        bot.answer_callback_query(call.id, 'ÿ¥ŸÉÿ±ÿßŸã ŸÑŸÉ ÿπŸÑŸâ ÿßŸÑÿßÿ®ŸÑÿßÿ∫ , ÿ≥ÿ™ŸÖ ŸÖÿ±ÿßÿ¨ÿπÿ© ÿ®ŸÑÿßÿ∫ŸÉ ŸÖŸÜ ŸÇÿ®ŸÑ ÿßŸÑŸÖÿ∑Ÿàÿ± Ÿà ÿßÿ™ÿÆÿßÿ∞ ÿßŸÑÿßÿ¨ÿ±ÿßÿ¶ÿßÿ™ ÿßŸÑÿßÿ≤ŸÖÿ© .', show_alert=True)
        channel_username = '@' + data.split('|')[1]
        butts = mk(
            [
                [btn(text='ÿ≠ÿ∞ŸÅ + ÿ≠ÿ∂ÿ± ', callback_data=f'bandchat|{channel_username}')]
            ])
        admins = db.get('admins')
        
        bot.send_message(chat_id=sudos,text=f'ŸÜŸÖ ÿßŸÑÿßÿ®ŸÑÿßÿ∫ ÿπŸÑŸâ ŸÇŸÜÿßÿ© ÿ¨ÿØŸäÿØÿ© .\nŸÖŸÜ ŸÇÿ®ŸÑ : @{call.from_user.username} \n ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {channel_username} \n ', reply_markup=butts)
    
    if data.split('|')[0] == 'bandchat':
        bot.edit_message_text(text='ÿ™ŸÖ ÿ≠ÿ∂ÿ± ÿßŸÑŸÇŸÜÿßÿ© Ÿà ÿßŸäŸÇÿßŸÅ ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿ®ŸÜÿ¨ÿßÿ≠', chat_id=call.message.chat.id, message_id=call.message.message_id)
        ch = data.split('|')[1]
        BAND_CHAT(ch)

    if data == 'codecoin':
        ms =  bot.edit_message_text(text='ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ŸÉŸàÿØ ÿßŸÑŸáÿØŸäÿ©', chat_id=call.message.chat.id, message_id=call.message.message_id)
        ids = randid()
        USER_TEMP[call.from_user.id]['code']['id'] = ids
        bot.register_next_step_handler(ms, get_code_coin, ids)
        

    if data == 'tmoo':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts','chtime','send','send_link','code', 'ads']
        for temp in a:
            db.delete(f'{temp}_{cid}_proccess')
        user_id = call.from_user.id
        joo = db.get(f"user_{user_id}")
        price_join = db.get("price_join") if db.exists("price_join") else 10
        coin = int(joo['coins'])
        mem = coin / price_join
        xxx = db.get(f'tmoo_{cid}_proccess')
        keys = mk(row_width=3)
        btn1 = btn('ÿ™ŸÖŸàŸäŸÑ ÿ®ÿ¨ŸÖŸäÿπ ŸÜŸÇÿßÿ∑ŸÉ', callback_data='tmoil_with_all')
        btn2 = btn('ÿ™ŸÖŸàŸäŸÑ 15 ÿπÿ∂Ÿà', callback_data='tmoil_15')
        keys.add(btn1)
        if mem >= 15:
            keys.add(btn2)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ŸÖŸàŸäŸÑŸáŸÖ ÿßŸà ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿßÿÆÿ™Ÿäÿßÿ± ŸÖŸÜ ÿßŸÑÿßÿ≤ÿ±ÿßÿ± üåê\n\n-ŸÖŸÑÿßÿ≠ÿ∏Ÿá ŸÉŸÑ1ÿπÿ∂Ÿà={price_join} ŸÜŸÇÿ∑ÿ©\n\n-ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿ≠ÿßŸÑŸäŸá : {coin}',chat_id=cid, message_id=mid, parse_mode="Markdown", reply_markup=keys)
        bot.register_next_step_handler(x, tmmo)
        db.set(f'tmoo_{cid}_proccess', True)
    if data == 'tmoil_with_all':
        joo = db.get(f"user_{cid}")
        price_join = db.get("price_join") if db.exists("price_join") else 10
        coin = int(joo['coins'])
        mem = coin / price_join
        count = int(mem)
        db.delete(f'tmoo_{cid}_proccess')
        if mem >= 15:
            x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ™ŸÖŸàŸäŸÑ {count} ÿπÿ∂Ÿà\n‚Ä¢ ÿßÿ±ŸÅÿπ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ @x31bot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ™ŸÉ\n\n‚Ä¢ ÿ´ŸÖ ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÖÿπÿ±ŸÅ ÿßŸà ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸà ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© üë•',chat_id=cid,message_id=mid)
            bot.register_next_step_handler(x, tmm_count, count)
        else:
            bot.answer_callback_query(call.id, text=f"ÿπÿ∞ÿ±ÿß ÿå ÿßŸÑÿ≠ÿØ ÿßŸÑÿßÿØŸÜŸä ŸÖŸÜ ÿßŸÑÿ™ŸÖŸàŸäŸÑ ŸáŸà 15 ÿπÿ∂Ÿà",show_alert=True)
    if data == 'tmoil_15':
        joo = db.get(f"user_{cid}")
        price_join = db.get("price_join") if db.exists("price_join") else 10
        coin = int(joo['coins'])
        mem = coin / price_join
        db.delete(f'tmoo_{cid}_proccess')
        if mem >= 15:
            x = bot.edit_message_text(text='‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ™ŸÖŸàŸäŸÑ 15 ÿπÿ∂Ÿà\n‚Ä¢ ÿßÿ±ŸÅÿπ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ @x31bot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ™ŸÉ\n\n‚Ä¢ ÿ´ŸÖ ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÖÿπÿ±ŸÅ ÿßŸà ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸà ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© üë•',chat_id=cid,message_id=mid)
            count = 15
            bot.register_next_step_handler(x, tmm_count, count)
        else:
            bot.answer_callback_query(call.id, text=f"ÿπÿ∞ÿ±ÿß ÿå ŸÜŸÇÿßÿ∑ŸÉ ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå",show_alert=True)
    if data == 'skip':
        skip(call)

    if data == 'check_join':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        if doo != None:
            for i in chats_user:
                if i in chats_joining:
                    bot.answer_callback_query(call.id, text=f"ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä ŸÜŸÇÿßÿ∑ ŸÖŸÜ Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿßŸÑŸÅÿπŸÑ ‚ùå",show_alert=True)
                    return
                try:
                    x = bot2.get_chat_member(chat_id=i, user_id=user_id)
                    chat_info = bot2.get_chat(i)
                    name = chat_info.title
                except:
                    chats_joining.append(i)
                    db.set(f"chats_{user_id}", chats_joining)
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(i)
                    db.set("force_ch", chats_dd)
                    return
                if str(x.status) in stypes:
                    Db.Add(user_id,i)
                    tm = db.get("members") if db.exists("members") else 0
                    tmm = int(tm) + 1
                    db.set("members", int(tmm))
                    bot.answer_callback_query(call.id, text=f"ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {coin_join} ŸÜŸÇÿßÿ∑ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ",show_alert=True)
                    typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
                    ftt = typ + 0.1
                    db.set(f"typ_{user_id}", float(ftt))
                    ids = db.get(f"id_{i}")
                    count = db.get(f"count_{i}")
                    countcc = int(count) - 1
                    db.set(f"count_{i}", countcc)
                    joo = db.get(f"user_{user_id}")
                    joo['coins'] = int(joo['coins']) + int(coin_join)
                    db.set(f"user_{user_id}", joo)
                    chats_joining.append(i)
                    db.set(f"chats_{user_id}", chats_joining)
                    ch_joining.append(i)
                    db.set(f"ch_{user_id}", ch_joining)
                    chat_inf = bot.get_chat(i)
                    name = chat_inf.title
                    count = db.get(f"count_{i}")
                    ids = db.get(f"id_{i}")
                    nextch(call)
                    if int(count) <= 0:
                        tm = db.get("tmoil") if db.exists("tmoil") else 0
                        tmm = int(tm) + 1
                        db.set("tmoil", int(tmm))
                        chats_dd = db.get('force_ch')
                        chats_dd.remove(i)
                        db.set("force_ch", chats_dd)
                        chat_info = bot2.get_chat(i)
                        name = chat_info.title
                        ii = i.replace('@', '')
                        mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else ""
                        bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ @{ii} ÿ® {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                        iddd = 5554509550
                        bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    else:
                        ii = i.replace('@', '')
                        bot.send_message(chat_id=int(ids), text=f"ÿßÿ¥ÿ™ÿ±ŸÉ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ‚úÖ\n\n‚Ä¢ ÿßÿ≥ŸÖŸá : {call.from_user.first_name}\n‚Ä¢ ÿßŸäÿØŸäŸá : {call.from_user.id}\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : `{countcc}`", parse_mode="Markdown")
                        for i in chats_joining:
                            try:
                                x = bot2.get_chat_member(chat_id=i, user_id=user_id)
                            except:
                                chats_joining.remove(i)
                                ids = db.get(f"id_{i}")
                                db.set(f"ch_{user_id}", chats_joining)
                                return
                            if str(x.status) not in stypes:
                                chats_joining.remove(i)
                                ids = db.get(f"id_{i}")
                                db.set(f"ch_{user_id}", chats_joining)
                                chats_g = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
                                if i in chats_g:
                                    chats_g.remove(i)
                                db.set(f"chats_{user_id}", chats_g)
                                all = int(coin_join) * 2
                                user_info = db.get(f'user_{user_id}')
                                user_info['coins'] = int(user_info['coins']) - int(all)
                                db.set(f"user_{user_id}", user_info)
                                chat_info = bot.get_chat(i)
                                ii = i.replace('@', '')
                                name = chat_info.title
                                bot.send_message(chat_id=int(cid), text=f"‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ ‚ùå\n\n‚Ä¢ ŸÑÿßŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÇŸÜÿßÿ© @{ii}", parse_mode="Markdown")
                else:
                    bot.answer_callback_query(call.id, text="ÿßÿ¥ÿ™ÿ±ŸÉ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸàŸÑÿß ‚ùå")
    if data == 'join_10':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        key = mk(
            [
                [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ üí≤', callback_data='collect')],
                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')]
            ]
        )
        count = 0
        keys = mk(row_width=2)
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        for channel in chats_user[:10]:
            try:
                chat_info = bot2.get_chat(channel)
                name = chat_info.title
                ii = channel.replace('@', '')
                button = btn(name, url=f"https://t.me/{ii}")
                button2 = btn('ÿßÿ®ŸÑÿßÿ∫', callback_data=f"repotch|{ii}")
                keys.add(button, button2)
                count += 1
                if count == 1:
                    np = "‚¨úÔ∏è"
                    mf = 10 * count
                elif count == 2:
                    np = "‚¨úÔ∏è‚¨õÔ∏è"
                    mf = 10 * count
                elif count == 3:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´"
                    mf = 10 * count
                elif count == 4:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™"
                    mf = 10 * count
                elif count == 5:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•"
                    mf = 10 * count
                elif count == 6:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüß"
                    mf = 10 * count
                elif count == 7:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüßüü®"
                    mf = 10 * count
                elif count == 8:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüßüü®üü¶"
                    mf = 10 * count
                elif count == 9:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüßüü®üü¶üü©"
                    mf = 10 * count
                elif count == 10:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüßüü®üü¶üü©‚úÖ"
                    mf = 10 * count
                else:
                    np = "‚¨úÔ∏è‚¨õÔ∏èüü´üü™üü•üüßüü®üü¶üü©‚úÖ"
                    mf = 10 * count
            except:
                continue
            all = int(count) * int(coin_join)
            k = f'''‚ö°Ô∏è] ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ 10x \n\n{np}'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
        if count == 0:
            k = f'''‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ÿ≠ÿßŸÑŸäÿß ÿå ŸÇŸÖ ÿ®ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇÿ© ŸÖÿÆÿ™ŸÑŸÅÿ©.'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
        else:
            button1 = btn("ÿ™ÿ≠ŸÇŸÇ ‚ôªÔ∏è", callback_data="check10")
            button2 = btn("‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫", callback_data="collect")
            keys.add(button1,button2)
            all = int(count) * int(coin_join)
            k = f'''‚ö°Ô∏è] ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ 10x \n\n{np}'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
    if data == 'check10':
        bot.answer_callback_query(call.id, text="ŸÑÿ≠ÿ∏ÿ© ŸÖŸÜ ŸÅÿ∂ŸÑŸÉ . . .")
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        key = mk(
            [
                [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ', callback_data='collect')],
                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')]
            ]
        )
        count = 0
        count1 = 0
        keys = mk(row_width=2)
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        for channel in chats_user[:10]:
            try:
                x = bot2.get_chat_member(chat_id=channel, user_id=user_id)
            except:
                continue
            if str(x.status) in stypes:
                count1 += 1
                count = db.get(f"count_{channel}")
                ids = db.get(f"id_{channel}")
                if int(count) <= 0:
                    tm = db.get("tmoil") if db.exists("tmoil") else 0
                    tmm = int(tm) + 1
                    db.set("tmoil", int(tmm))
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(channel)
                    db.set("force_ch", chats_dd)
                    chat_info = bot2.get_chat(channel)
                    name = chat_info.title
                    ii = channel.replace('@', '')
                    mem = db.get(f"mem_{channel}") if db.exists(f"mem_{channel}") else ""
                    bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ @{ii} ÿ® {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    iddd = 5554509550
                    bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                else:
                    tm = db.get("members") if db.exists("members") else 0
                    tmm = int(tm) + 1
                    db.set("members", int(tmm))
                    ids = db.get(f"id_{channel}")
                    chat_info = bot2.get_chat(channel)
                    name = chat_info.title
                    count = db.get(f"count_{channel}")
                    countcc = int(count) - 1
                    db.set(f"count_{channel}", countcc)
                    chats_joining.append(channel)
                    db.set(f"chats_{user_id}", chats_joining)
                    ch_joining.append(channel)
                    db.set(f"ch_{user_id}", ch_joining)
                    chat_inf = bot.get_chat(channel)
                    name = chat_inf.title
                    count = db.get(f"count_{channel}")
                    ids = db.get(f"id_{channel}")
                    ii = channel.replace('@', '')
                    bot.send_message(chat_id=int(ids), text=f"ÿßÿ¥ÿ™ÿ±ŸÉ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ‚úÖ\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : `{countcc}` üö∏", parse_mode="Markdown")
        if int(count1) == 0:
            kkj = f'''Ÿäÿ®ÿØŸà ÿßŸÜŸÉ ŸÑŸÖ ÿ™ÿ¥ÿ™ÿ±ŸÉ ÿ®ÿ£Ÿä ŸÇŸÜÿßÿ© üóø'''
        else:
            all = int(coin_join) * int(count1)
            kkj = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä {count1} ŸÇŸÜŸàÿßÿ™ Ÿàÿ≠ÿµŸÑÿ™ ÿπŸÑŸä {all} ŸÜŸÇÿ∑ÿ© ‚úÖ'''
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) + int(all)
            db.set(f"user_{user_id}", joo)
        bot.edit_message_text(text=kkj, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
    if data == 'settings':
        keys = mk(row_width=2)
        btn1 = btn('ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üóÉ', callback_data='account')
        btn3 = btn('ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üõ†',callback_data='setacc')
        btn09 = btn('ŸÖÿπÿ±ŸÅÿ© ÿπÿØÿØ ÿßŸÑÿßÿ±ŸÇÿßŸÖ', callback_data='numbers')
        btn122 = btn('‚Äπ¬†ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáŸÖÿßÿ™ ŸàÿßŸÑÿ¨Ÿàÿßÿ¶ÿ≤ ÿå ‚Ä∫Ô∏è', callback_data='tape')
        btn110 = btn('‚Äπ¬†ÿ™ŸÖŸàŸäŸÑÿßÿ™Ÿä ÿßŸÑŸÜÿ¥ÿ∑ÿ© ÿå ‚Ä∫', callback_data='mytm')
        keys.add(btn3, btn1)
        keys.add(btn09, btn122)
        keys.add(btn110)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
        bot.edit_message_text(text='<strong>‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚öôÔ∏è\n\n‚Ä¢ ÿßÿÆÿ™ÿ± ŸÖÿß ŸäŸÜÿßÿ≥ÿ®ŸÉ ŸÖŸÜ ÿßŸÑÿßÿ≤ÿ±ÿßÿ± ÿßÿØŸÜÿßŸá üì•</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'setacc':
        keys = mk(row_width=2)
        btn1 = btn('ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑÿ≥ŸÑŸäŸäÿ®', callback_data='chtime')
        btn3 = btn('‚ÑπÔ∏è',callback_data='infotime')
        keys.add(btn3, btn1)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='settings'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üõ†\n‚Ä¢ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸä (‚ÑπÔ∏è) ÿå ŸÑŸÖÿπÿ±ŸÅÿ© ÿßŸÑŸÖÿ≤ŸäÿØ ÿ≠ŸàŸÑ ÿßŸÑÿßÿπÿØÿßÿØ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'chtime':
        keys = mk(row_width=2)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='setacc'))
        tim = db.get(f"tim_{cid}") if db.exists(f"tim_{cid}") else 0
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßŸÑŸÖÿØÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ© ŸÑŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ : {tim} ‚è±\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ¨ÿØŸäÿØ ( ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) :',chat_id=cid,message_id=mid,reply_markup=keys)
        bot.register_next_step_handler(x, chtime)
    if data == 'infotime':
        keys = mk(row_width=2)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='setacc'))
        bot.edit_message_text(text='‚Ä¢ ÿßŸÑÿ≥ŸÑŸäŸäÿ® (‚è±) : ŸáŸà ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÖŸÇÿØÿ± ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ ŸÅŸä ÿ¨ŸÖŸäÿπ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿ®ÿßŸÑÿ®Ÿàÿ™ ŸÖÿß ÿπÿØÿß ÿÆÿØŸÖÿ© ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿ™ÿ≠ÿØÿØ ŸäÿØŸàŸäÿß \n\n‚Ä¢ ÿ™ŸÖ ÿ™ÿµŸÖŸäŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ŸÑŸäÿ≥ÿßÿπÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÅŸä ÿßÿÆÿ™ÿµÿßÿ± ÿßŸÑŸàŸÇÿ™ ÿπŸÑŸäŸá ŸÅŸä ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑŸàŸÇÿ™ ŸäÿØŸàŸä\n\n‚Ä¢ ÿπŸÑŸäŸÉ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä ÿå ÿßÿ∞ÿß ÿßÿ±ÿØÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ŸäŸÉŸàŸÜ ŸÅŸàÿ±Ÿä ÿπŸäŸÜ ÿßŸÑŸÇŸäŸÖÿ© ÿ® (0)\n\n‚Ä¢ ÿßÿπŸÑŸä ŸÇŸäŸÖÿ© ŸÑŸÑŸàŸÇÿ™ ŸáŸä (200) ÿ´ÿßŸÜŸäÿ© ÿå ÿßŸÇŸÑ ŸÇŸäŸÖÿ© (0)',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'leave':
        db.set(f'leave_{cid}_proccess', True)
        x = bot.edit_message_text(text='ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßÿ∞ÿß ÿßŸÑŸÇŸÜÿßÿ© ÿÆÿßÿµŸáÿå ÿßÿ∞ÿß ÿπÿßŸÖŸá ÿßÿ±ÿ≥ŸÑ ŸÖÿπÿ±ŸÅŸáÿß ŸÅŸÇÿ∑ÿü',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'leavs'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'account':
        if not check_user(cid):
            return start_message(call.message)
        acc = get(cid)
        user_id = call.from_user.id
        coins, users = acc['coins'], len(get(cid)['users'])
        info = db.get(f"user_{call.from_user.id}")
        daily_count = int(db.get(f"user_{user_id}_daily_count")) if db.exists(f"user_{user_id}_daily_count") else 0
        daily_gift = int(db.get("daily_gift")) if db.exists("daily_gift") else 30
        all_gift = daily_count * daily_gift
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        trans = int(db.get(f"user_{user_id}_trans")) if db.exists(f"user_{user_id}_trans") else 0
        y = trend()
        prem = 'Premium' if info['premium'] == True else 'Free'
        textt = f'''
‚Ä¢ [üí≤] ÿπÿØÿØ ŸÜŸÇÿßÿ∑ ÿ≠ÿ≥ÿßÿ®ŸÉ : {coins}
‚Ä¢ [‚ôæ] ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑÿßÿ≠ÿßŸÑŸá ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {users}
‚Ä¢ [üë§] ŸÜŸàÿπ ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿØÿßÿÆŸÑ ÿßŸÑÿ®Ÿàÿ™ : {prem}
‚Ä¢ [üéÅ] ÿπÿØÿØ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© ÿßŸÑÿ™Ÿä ÿ¨ŸÖÿπÿ™Ÿáÿß : {daily_count}
‚Ä¢ [üí≤] ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÑŸä ÿ¨ŸÖÿπÿ™Ÿáÿß ŸÖŸÜ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© : {all_gift}
‚Ä¢ [üß¨] ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ∑ŸÑÿ®ÿ™Ÿáÿß : {buys}
‚Ä¢ [üõ©] ÿπÿØÿØ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {trans}

{y}'''
        bot.edit_message_text(text=textt,chat_id=cid,message_id=mid,reply_markup=bk)
        return
    if data == 'setforce':
        x = bot.edit_message_text(text='‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ŸÖÿπÿ±ŸÅÿßÿ™ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸáŸÉÿ∞ÿß \n @first @second',reply_markup=bk,chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, setfo)
    if data == 'admins':
        get_admins = db.get('admins')
        if get_admins:
            if len(get_admins) >=1:
                txt = 'ÿßŸÑÿßÿØŸÖŸÜŸäÿ© : \n'
                for ran, admin in enumerate(get_admins, 1):
                    try:
                        info = bot.get_chat(admin)
                        username = f'{ran} @'+str(info.username)+' | {admin}\n' if info.username else f'{ran} {admin} .\n'
                        txt+=username
                    except:
                        txt+=f'{ran} {admin}\n'
                bot.edit_message_text(chat_id=cid, message_id=mid, text=txt)
                return
            else:
                bot.edit_message_text(chat_id=cid, message_id=mid, text=f'ŸÑÿß ŸäŸàÿ¨ÿØ ÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
                return
        else:
            bot.edit_message_text(chat_id=cid, message_id=mid, text='ŸÑÿß ŸäŸàÿ¨ÿØ ÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
            return
    if data == 'votes':
        db.set(f'vote_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'votes'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'votes2':
        db.set(f'vote_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'votes2'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'votes3':
        db.set(f'vote_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'votes3'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'buy':
        keys = mk(row_width=2)
        btn6 = btn('ÿ™ÿ®ÿØŸäŸÑ ŸÜŸÇÿßÿ∑ ÿßŸÑŸÖŸÑŸäÿßÿ± ‚áå ÿ≥ÿ™ÿßÿ±ÿ≤ ',callback_data='change_point')
        keys.add(btn6)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
        hakem = ''' ‚Ä¢ ‚åÅ ŸÑÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ ŸÖŸÜ ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ üíé ‚≠êÔ∏è‚Ü´ ‚§à :üí∞


‚åÅÔ∏∞1$   ‚Ü¨ 4000 IQD ŸÅŸä ÿßŸÑÿ®Ÿàÿ™
‚åÅÔ∏∞5$ ‚Ü¨ 22000 IQD ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ 
‚åÅÔ∏∞10$ ‚Ü¨ 45000 IQD ŸÅŸä ÿßŸÑÿ®Ÿàÿ™
‚åÅÔ∏∞25$ ‚Ü¨ 1000000 IQD ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ 
- - - - - - - - - - - - - - -
‚åÅ ŸÑÿ™ÿ®ÿØŸäŸÑ ŸÜŸÇÿßÿ∑ ŸÖŸÜ ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ üíéÿ© ÿ®ÿØŸÑ ÿßŸÑŸÖŸÑŸäÿßÿ± ‚Ü´‚§à
‚Ä¢ 3000ŸÜŸÇÿ∑Ÿá (ŸÖŸÑŸäÿßÿ±) = 3000 ŸÜŸÇÿ∑Ÿá
‚Ä¢ 10000ŸÜŸÇÿ∑Ÿá (ŸÖŸÑŸäÿßÿ±) = 12000 ŸÜŸÇÿ∑Ÿá
‚Ä¢15000ŸÜŸÇÿ∑Ÿá (ŸÖŸÑŸäÿßÿ±) = 18000 ŸÜŸÇÿ∑Ÿá
‚Ä¢20000ŸÜŸÇÿ∑Ÿá (ŸÖŸÑŸäÿßÿ±) = 25000 ŸÜŸÇÿ∑Ÿá
‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ 
.           ‚åÅ ŸÑÿ™ÿ®ÿØŸäŸÑ ŸÜŸÇÿßÿ∑ ŸÖŸÜ ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ ÿ≥ÿ™ÿßÿ±ÿ≤ üíéÿ© ÿ®ÿØŸÑ ÿØÿπŸÖŸÉŸÖ ‚Ü´‚§à
‚Ä¢ 3000ŸÜŸÇÿ∑Ÿá (ÿØÿπŸÖŸÉŸÖ) = 3000 ŸÜŸÇÿ∑Ÿá
‚Ä¢ 10000ŸÜŸÇÿ∑Ÿá (ÿØÿπŸÖŸÉŸÖ) = 12000 ŸÜŸÇÿ∑Ÿá
‚Ä¢15000ŸÜŸÇÿ∑Ÿá (ÿØÿπŸÖŸÉŸÖ) = 18000 ŸÜŸÇÿ∑Ÿá
‚Ä¢20000ŸÜŸÇÿ∑Ÿá (ÿØÿπŸÖŸÉŸÖ) = 25000 ŸÜŸÇÿ∑Ÿá
‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ ‚ãØ ‚Ä¢ 
‚åÅ ŸÑŸÑÿ™ŸàÿßÿµŸÑ 
‚åÅÔ∏∞@ty4tt
‚åÅÔ∏∞ ŸäŸàÿ≤ÿ± ÿßŸÑÿ®Ÿàÿ™ @TY1BBOT  
- - - - - - - - - - - - - - -
‚åÅÔ∏ôÿ∑ÿ±ŸÇ ÿßŸÑÿØŸÅÿπ 
‚åÅÔ∏∞ŸÉÿ±ŸäŸÖŸä  , ÿ®ÿßŸäŸäÿ±  , ÿ¢ÿ≥Ÿäÿß , ÿ≤ŸäŸÜ ŸÉÿßÿ¥ ,ŸÜŸÇÿßÿ∑ ÿØÿπŸÖŸÉ
‚åÅÔ∏∞ŸÜŸÇÿßÿ∑ ÿßŸÑŸÖŸÑŸäÿßÿ± , ŸÜŸÇÿßÿ∑ ÿ®Ÿàÿ™ ÿßŸÑŸäŸÖŸÜ  .
ŸÖŸÑÿßÿ≠ÿ∏Ÿá:ÿ•ÿ∞ÿß ÿ™ŸÖ ŸÉÿ¥ŸÅ ÿßŸä ÿπŸÖŸÑŸäŸá ÿ¥ÿ±ÿßÿ° ŸÖŸÜ ÿ∫Ÿäÿ± ÿ≠ÿ≥ÿßÿ®ŸÜÿß ÿßŸÑÿ±ÿ≥ŸÖŸä ÿ≥Ÿäÿ™ŸÖ ÿ™ÿµŸÅŸäÿ± ÿ¨ŸÖŸäÿπ ŸÜŸÇÿßÿ∑ ÿßŸÑÿ∑ÿ±ŸÅŸäŸÜ ŸàŸÑŸÜ Ÿäÿ™ŸÖ ÿ™ÿπŸàŸäÿ∂ ÿßŸä ÿ∑ÿ±ŸÅ‚öôÔ∏è '''
        bot.edit_message_text(text=hakem,chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'dump_votes':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'dump_votes_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ≥ÿ≠ÿ® ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ŸÖŸÜŸá ',reply_markup=bk,chat_id=cid,message_id=mid)
            bot.register_next_step_handler(x, dump_votes)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'share_link':
        bot_user = None
        try:
            x = bot.get_me()
            bot_user = x.username
        except:
            bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿØÿ´ ÿÆÿ∑ÿß ŸÖÿß ŸÅŸä ÿßŸÑÿ®Ÿàÿ™',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        link = f'https://t.me/{bot_user}?start={cid}'
        y = trend()
        keys = mk(row_width=2)
        keys.add(btn('ÿ¨Ÿàÿßÿ¶ÿ≤ ŸÖÿ¥ÿßÿ±ŸÉÿßÿ™ ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ©', callback_data='_givt'))
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='collect'))
        xyz = f'''
<strong>
ÿßŸÜÿ≥ÿÆ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ´ŸÖ ŸÇŸÖ ÿ®ŸÖÿ¥ÿßÿ±ŸÉÿ™Ÿá ŸÖÿπ ÿßÿµÿØŸÇÿßÿ¶ŸÉ !!
</strong>
~  ŸÉŸÑ ÿ¥ÿÆÿµ ŸäŸÇŸàŸÖ ÿ®ÿßŸÑÿØÿÆŸàŸÑ ÿ≥ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ <strong>{link_price}</strong> ŸÜŸÇÿ∑Ÿá

~ ÿ®ÿ•ŸÖŸÉÿßŸÜŸÉ ÿπŸÖŸÑ ÿßÿπŸÑÿßŸÜ ÿÆÿßÿµ ÿ®ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ 

üåÄ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© : \n<strong>{link}</strong> .

~ ŸÖÿ¥ÿßÿ±ŸÉÿ™ŸÉ ŸÑŸÑÿ±ÿßÿ®ÿ∑ : <strong>{len(get(cid)["users"])} </strong>.

{y}
        '''
        bot.edit_message_text(text=xyz,chat_id=cid,message_id=mid,reply_markup=keys,parse_mode='HTML')
        return
    if data == 'members':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'member_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß ',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'members'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'membersp':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'memberp_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß ',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'membersp'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'spams':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'spam_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß ÿßÿ≥ÿ®ÿßŸÖ',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'msgs'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
        
    if data == 'react':
        db.set(f'react_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'react'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'reacts':
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ®ÿ¥ŸÉŸÑ ÿπÿ¥Ÿàÿßÿ¶Ÿä',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'reactsrandom'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'forward':
        db.set(f'forward_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ© ',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'forward'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'view_stories':
        # bot.answer_callback_query(call.id, 'ÿßŸÑÿÆÿØŸÖÿ© ÿ™ÿ≠ÿ™ ÿßŸÑÿµŸäÿßŸÜÿ© . ', show_alert=True)
        # return
        db.set(f'view_stories_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáÿß ',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'view_stories'
        bot.register_next_step_handler(x, get_amount, type)

    if data == 'rect_stories':
        keys = mk(row_width=2)
        for ii in REACTIONS_LIST:
            keys.add(btn(''.join(REACTIONS_LIST[ii]), callback_data=f'rectstories|{ii}'))
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='free'))
        bot.edit_message_text(text='‚Ä¢ ÿßÿÆÿ™ÿ± ŸÜŸàÿπ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™',chat_id=cid,message_id=mid,reply_markup=keys)

    if data.split('|')[0] == 'rectstories':
        rect_id = data.split('|')[1]
        db.set(f'rect_stories_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáÿß ',reply_markup=bk,chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, get_amount_rect_Stores, rect_id)
    if data == 'click_force':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© VIP',chat_id=cid,message_id=mid,reply_markup=keys)
                
                return 
            x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿπŸÑŸäŸá',chat_id=cid,message_id=mid,reply_markup=keys)
            bot.register_next_step_handler(x, get_url_click_force)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© VIP',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'view':
        db.set(f'view_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáÿß ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ©',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'view'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'view_2':
        db.set(f'view_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáÿß ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ©',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'view_2'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'poll':
        db.set(f'poll_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ° ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'poll'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'poll2':
        db.set(f'poll_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ° ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'poll2'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'userbot':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'userbot_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáŸÖ ŸÑŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'userbot'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'linkbot':
        db.set(f'linkbot_{cid}_proccess', True)
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'linkbot'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'comments':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'comments_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿπŸÑŸäŸÇÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'comments'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'tape':
        how = ""
        x = giiiift(cid)
        if x is not None:
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            if hours > 0:
                how = f"‚ùå"
                hoow = "0/1"
            elif minutes > 0:
                how = f"‚ùå"
                hoow = "0/1"
            else:
                how = f"‚ùå"
                hoow = "0/1"
        else:
            how = "‚úÖ"
            hoow = "1/1"
        typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 100.0:
            db.set(f"typ_{cid}", 100)
            type = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 85.0:
            type = "‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 75.0:
            type = "‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 50.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 25.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 15.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà ◊Ä<"
        elif typ >= 0.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì ◊Ä<"
        if typ == 0.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ◊Ä<"
        keys = mk(
             [
                 [btn(text=f'ÿßŸÑÿ≤ŸäÿßÿØÿ©', callback_data=f'tt'),btn(text=f'ÿßŸÑÿ≠ÿµŸàŸÑ', callback_data=f'tt'),btn(text=f'ÿßŸÑŸÖÿ™ÿßÿ≠', callback_data=f'tt'),btn(text=f'ÿßŸÑŸÖŸáÿßŸÖ', callback_data=f'tt')],
                 [btn(text=f'0.2%', callback_data=f'tjkt'),btn(text=f'{how}', callback_data='ee'), btn(text=f'{hoow}', callback_data='kk'),btn(text=f'ÿßŸÑŸáÿØŸäÿ© üéÅ', callback_data=f'dailygift')],
                 [btn(text=f'0.3%', callback_data=f'tjklot'),btn(text=f'‚úÖ', callback_data='eoke'), btn(text=f'‚ôæ', callback_data='kiskk'),btn(text=f'ÿßŸÑÿØÿπŸàÿ© üåÄ', callback_data=f'share_link')],
                 [btn(text=f'0.1%', callback_data=f'tjklot'),btn(text=f'‚úÖ', callback_data='eoe'), btn(text=f'‚ôæ', callback_data='kis'),btn(text=f'ÿßŸÑÿßŸÜÿ∂ŸÖÿßŸÖ üì£', callback_data=f'join_ch')],
                 [btn(text=f'0.2%', callback_data=f'tvjklot'),btn(text=f'‚úÖ', callback_data='eloe'), btn(text=f'‚ôæ', callback_data='kiskv'),btn(text=f'ÿßŸÑÿ™ŸÖŸàŸäŸÑ üìÆ', callback_data=f'tmoo')],
                 [btn(text=f'0.1%', callback_data=f'tvjot'),btn(text=f'‚úÖ', callback_data='elo'), btn(text=f'‚ôæ', callback_data='kkv'),btn(text=f'ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ‚ôªÔ∏è', callback_data=f'send_coin')],
                 [btn(text=f'ŸÖÿ™ÿ¨ÿ± ÿßŸÑŸÖŸáÿßŸÖ üõí', callback_data='market')],
                 [btn(text=f'%{typ} ◊Ä {type}', callback_data='tto')],
                 [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back')]
             ]
        )
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è\n\n‚Ä¢ ÿßŸÉŸÖŸÑ ÿßŸÑŸÖŸáÿßŸÖ Ÿàÿßÿ≥ÿ™ÿ®ÿØŸÑ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿ®ÿßŸÑŸáÿØÿßŸäÿß ŸàÿßŸÑŸÖŸÉÿßŸÅÿßÿ™ ŸÅŸä ŸÖÿ™ÿ¨ÿ± ÿßŸÑŸÖŸáÿßŸÖ ',chat_id=cid,message_id=mid,reply_markup=keys)
    typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
    if typ >= 100.0:
        db.set(f"typ_{cid}", 100)
        type = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 85.0:
        type = "‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 75.0:
        type = "‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 50.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 25.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 15.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà ◊Ä<"
    elif typ >= 0.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì ◊Ä<"
    if typ == 0.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ◊Ä<"
    if data == 'market':
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        key = mk(
            [
                [btn(text='ÿßŸÑÿßÿ™ÿßÿ≠ÿ©', callback_data='pp'),btn(text=f'ÿßŸÑÿ≥ÿπÿ±', callback_data='pp'),btn(text=f'ÿßŸÑŸÖŸÉÿßŸÅÿ£ÿ©', callback_data='pp')],
                [btn(text='ŸÇÿ≥ŸÖ ÿßŸÑŸÜŸÇÿßÿ∑', callback_data='ppo')],
                [btn(text='‚úÖ', callback_data='chda'),btn(text=f'50.0%', callback_data='chda'),btn(text=f'5000 ŸÜŸÇÿ∑ÿ©', callback_data='chda')],
                [btn(text='‚úÖ', callback_data='chd1'),btn(text=f'10.0%', callback_data='chd1'),btn(text=f'1000 ŸÜŸÇÿ∑ÿ©', callback_data='chd1')],
                [btn(text='ŸÇÿ≥ŸÖ ÿßŸÑŸÄ ·¥†…™·¥ò', callback_data='plp')],
                [btn(text='‚ùå', callback_data='chvi'),btn(text=f'100.0%', callback_data='chvi'),btn(text=f'10 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='chvi')],
                [btn(text='‚úÖ', callback_data='ch5'),btn(text=f'50.0%', callback_data='ch5'),btn(text=f'5 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='ch5')],
                [btn(text='‚úÖ', callback_data='ch1'),btn(text=f'10.0%', callback_data='ch1'),btn(text=f'1 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='ch1')],
                [btn(text=f'%{typ} ◊Ä {type}', callback_data='tto')],
                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='tape')]
            ]
        )
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÖÿ™ÿ¨ÿ± ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è\n‚Ä¢ ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿ®ÿØÿßŸÑ ÿßŸÑŸÖŸÉÿßŸÅÿßÿ™ ŸÖŸÇÿßÿ®ŸÑ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ',chat_id=cid,message_id=mid,reply_markup=key)
    if data == 'chda':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 50.0:
            rk = "ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 5000 ŸÜŸÇÿ∑ÿ© Ÿàÿ™ŸÖ ÿÆÿµŸÖ 50.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ"
            typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 50.0
            db.set(f"typ_{cid}", float(ftt))
            info = db.get(f'user_{cid}')
            info['coins'] = int(info['coins']) + 5000
            db.set(f"user_{cid}", info)
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'chd1':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 10.0:
            rk = "ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 1000 ŸÜŸÇÿ∑ÿ© Ÿàÿ™ŸÖ ÿÆÿµŸÖ 10.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ"
            typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 10.0
            db.set(f"typ_{cid}", float(ftt))
            info = db.get(f'user_{cid}')
            info['coins'] = int(info['coins']) + 1000
            db.set(f"user_{cid}", info)
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'dellink':
        count_coins = db.get("user_trans")
        if count_coins != 0:
            try:
                rand = db.get("user_tran")
                user_from = db.get("user_iddd")
                joo = db.get(f"user_{user_from}")
                info = db.get(f"user_{cid}")
                coins = info['coins']
                rk = f"""*‚Ä¢ üìé] ÿ™ŸÖ ÿ™ÿπÿ∑ŸäŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ , Ÿàÿ≥ÿ™ÿ±ÿØÿßÿØ {count_coins} ŸÜŸÇÿ∑ÿ© ‚ôªÔ∏è*"""
                bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
                info['coins'] = int(info['coins']) + int(count_coins)
                db.set(f"user_{cid}", info)
                db.delete('user_tran')
                db.delete('user_iddd')
            except:
                rk = f"""*‚Ä¢ üìé] ÿ™ŸÖÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© Ÿáÿ∞ÿß ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚ùå*"""
                bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
        else:
            rk = f"""*‚Ä¢ üìé] ÿ™ŸÖÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© Ÿáÿ∞ÿß ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚ùå*"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
    if data == 'chvi':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 100.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 10 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 100.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 100.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 5)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(10))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 10
            h = 10 * 24
            m = 10 * 24 * 60
            s = 10 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå Ÿáÿ∞ÿß ÿßŸÑÿπÿ±ÿ∂ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ ÿ≠ÿßŸÑŸäÿßŸã ‚ùå")
    if data == 'ch5':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 50.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 5 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 50.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 50.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 3)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(5))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 5
            h = 5 * 24
            m = 5 * 24 * 60
            s = 5 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'ch1':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 10.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 1 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 10.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 10.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 1)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(1))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 1
            h = 1 * 24
            m = 1 * 24 * 60
            s = 1 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'lvallc':
        bot.edit_message_text(text='‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ',chat_id=cid,message_id=mid)
        acc = db.get('accounts')
        amount = len(acc)
        true = 0
        for amount in acc:
            ##print("Done1")
            try:
                true+=1
                o = asyncio.run(leave_chats(amount['s']))  
            except Exception as e:
                ##print(e)
                continue
            id = call.from_user.id
            bot.send_message(chat_id=id, text=f'‚Ä¢ ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ \n‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <code>{true}</code> ÿ≠ÿ≥ÿßÿ® ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
    if data == 'cancel':
        bot.edit_message_text(text='<strong>‚Ä¢ ÿ™ŸÖ ÿßŸÑÿ∫ÿßÿ° ÿπŸÖŸÑŸäÿ© ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ© ‚ùå</strong>',chat_id=cid,message_id=mid)
    
    
    if data == 'linkbot2':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return
            db.set(f'linkbot2_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß',reply_markup=bk,chat_id=cid,message_id=mid)
            type = 'linkbot2'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·µõÕ¢·µé·µñ ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    else:
        return
def skip(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    user_id = call.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
    chats_dd = db.get('force_ch')
    joo = db.get(f"user_{user_id}")
    coin = joo['coins']
    chats_user = [chat for chat in chats_dd if chat not in chats_joining]
    doo = db.get('force_ch')
    if doo != None:
        for i in chats_user:
            chats_joining.append(i)
            db.set(f"chats_{user_id}", chats_joining)
            nextch(call)
            return
def nextch(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    user_id = call.from_user.id
    v = 5
    if v == 5:
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        threading.Thread(target=CeckAnjoens,args=(user_id,)).start()
        if doo != None:
            for i in chats_user:
                count = db.get(f"count_{i}")
                ids = db.get(f"id_{i}")
                Status = requests.get(f"https://api.telegram.org/bot{token_helper}/getChatMember?chat_id={i}&user_id={ids}").json()["ok"]
                if Status:
                    
                    if int(count) <= 2:
                        
                        tm = db.get("tmoil") if db.exists("tmoil") else 0
                        tmm = int(tm) + 1
                        db.set("tmoil", int(tmm))
                        chats_dd = db.get('force_ch')
                        chats_dd.remove(i)
                        db.set("force_ch", chats_dd)
                        chat_info = bot.get_chat(i)
                        name = chat_info.title
                        ii = i.replace('@', '')
                        mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else "ÿπÿØÿØ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ"
                        bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ @{ii} ÿ® {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                        iddd = 5554509550
                        bot.send_message(chat_id=int(iddd), text=f"*ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ *[{name}](https://t.me/{ii})* ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ*\n*‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
                    else: 
                        chat_info = bot.get_chat(i)
                        name = chat_info.title
                        ii = i.replace('@', '')
                        k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© : {i} üì£'''
                        keys = mk(
                            [
                                [btn(text=f'{name}', url=f'https://t.me/{ii}')],
                                [btn(text='ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ‚úÖ', callback_data='check_join'), btn(text='ÿ™ÿÆÿ∑Ÿä üö∏', callback_data='skip')],
                                [btn(text='‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='collect')]
                            ]
                        )
                        bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys)
                        return
            kk = f"‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ≠ÿßŸÑŸä , ŸÇŸÖ Ÿäÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇŸá ŸÖÿÆÿ™ŸÑŸÅŸá ‚ùï\n‚Ä¢ ÿßÿ∞ÿß ŸÇŸÖÿ™ ÿ®ŸÖÿ∫ÿßÿØÿ±ÿ© ÿßŸä ŸÇŸÜÿßÿ© ÿ≥Ÿäÿ™ŸÖ ÿÆÿµŸÖ ÿ∂ÿπŸÅ ÿßŸÑŸÜŸÇÿßÿ∑"
            key = mk(
                [
                    [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ', callback_data='collect')],
                    [btn(text='ÿßŸÑÿ∫ÿßÿ° ‚ùå', callback_data='back')]
                ]
            )
            bot.edit_message_text(text=kk, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
def tmmo(msg):
    user_id = msg.from_user.id
    if not db.get(f'tmoo_{msg.from_user.id}_proccess'): return
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
    joo = db.get(f"user_{user_id}")
    price_join = db.get("price_join") if db.exists("price_join") else 10
    coin = int(joo['coins'])
    try:
        count = int(msg.text)
    except:
        bot.reply_to(msg, '‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸäŸÉŸàŸÜ ÿπÿØÿØ ŸÅŸÇÿ∑ ‚ùå')
        return
    if count <15:
        bot.reply_to(msg, "ÿßŸÇŸÑ ÿ≠ÿØ ŸÑŸÑÿ∑ŸÑÿ® ŸáŸà 15 ‚ùå")
        return
    all = int(price_join) * int(count)
    joo = db.get(f"user_{user_id}")
    if joo['coins'] < int(all):
        bot.reply_to(msg, "‚Ä¢ ÿπŸÅŸàÿß ÿå ŸÜŸÇÿßÿ∑ŸÉ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑŸáÿ∞ÿß ÿßŸÑÿ∑ŸÑÿ® ‚ùå")
        return
    x = bot.reply_to(msg, "‚Ä¢ ÿßÿ±ŸÅÿπ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ @x31bot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ™ŸÉ\n\n‚Ä¢ ÿ´ŸÖ ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÖÿπÿ±ŸÅ ÿßŸà ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸà ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© üë•")
    bot.register_next_step_handler(x, tmm_count, count)
def tmm_count(msg,count):
    user_id = msg.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
    joo = db.get(f"user_{user_id}")
    price_join = db.get("price_join") if db.exists("price_join") else 10
    channel = msg.text.replace('https://t.me/', '@').replace('@', '@')
    channels_force = db.get("force_ch") if db.exists("force_ch") else []
    channel_username = channel.lower().strip()
    balcklist = db.get('chat_blacklist')
    if channel_username in balcklist:
        bot.send_message(text='ÿπÿ∞ÿ±ŸÜ ÿ™ŸÖ ÿ≠ÿ∂ÿ± ŸÇŸÜÿßÿ™ŸÉ ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™ ÿ®Ÿä ÿ¥ŸÉŸÑ ŸÜŸáÿßÿ¶Ÿä . ', chat_id=msg.chat.id)
        return 
    try:
        chat_member = bot2.get_chat_member(channel_username, bot2.get_me().id)
    except:
        bot.reply_to(msg, "* ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜÿßÿ© ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ© ÿ™ÿ≠ŸÖŸÑ Ÿáÿ∞ÿß ÿßŸÑŸÖÿπÿ±ŸÅ ‚ùå*", parse_mode="Markdown")
        return False
    if str(chat_member.status) == "administrator":
        if channel_username in channels_force:
            count_befor = db.get(f"count_{channel_username}")
            alll = int(count_befor) + int(count)
            all_coins = int(price_join) * int(count)
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) - int(all_coins)
            db.set(f"user_{user_id}", joo)
            db.set(f"count_{channel_username}", alll)
            db.set(f"mem_{channel_username}", alll)
            db.set(f"id_{channel_username}", user_id)
            chat_info = bot.get_chat(channel_username)
            name = chat_info.title
            ii = channel_username.replace('@', '')
            all_coins = int(price_join) * int(count)
            bot.reply_to(msg, f"‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ ({all_coins}) ŸÜŸÇÿßÿ∑\n- Ÿàÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÄ {alll} ÿπÿ∂Ÿà üö∏\n‚Ä¢ ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿπÿØŸÖ ÿßÿ≤ÿßŸÑÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ≠ÿ™Ÿä ŸÑÿß Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ÿ®ÿπÿßÿØ ÿ™ŸÖŸàŸäŸÑŸÉ", parse_mode="Markdown")
            bot.send_message(chat_id=int(sudo), text=f"- ÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ© ÿ¨ÿØŸäÿØÿ© [{name}](https://t.me/{ii}) ÿ®ŸÄ {alll} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            my_tmm = db.get(f"my_tmm_{user_id}") if db.exists(f"my_tmm_{user_id}") else []
            if channel_username not in my_tmm:
                my_tmm.append(channel_username)
                db.set(f"my_tmm_{user_id}", my_tmm)
        else:
            all = int(price_join) * int(count)
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) - int(all)
            db.set(f"user_{user_id}", joo)
            db.set(f"count_{channel_username}", count)
            db.set(f"mem_{channel_username}", count)
            db.set(f"id_{channel_username}", user_id)
            channels_force = db.get("force_ch") if db.exists("force_ch") else []
            channels_force.append(channel_username)
            db.set("force_ch", channels_force)
            chat_info = bot.get_chat(channel_username)
            name = chat_info.title
            ii = channel_username.replace('@', '')
            bot.reply_to(msg, f"‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ ({all}) ŸÜŸÇÿßÿ∑\n- Ÿàÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÄ {count} ÿπÿ∂Ÿà üö∏\n\n‚Ä¢ ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿπÿØŸÖ ÿßÿ≤ÿßŸÑÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ≠ÿ™Ÿä ŸÑÿß Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ÿ®ÿπÿßÿØ ÿ™ŸÖŸàŸäŸÑŸÉ", parse_mode="Markdown")
            bot.send_message(chat_id=int(sudo), text=f"- ÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ© ÿ¨ÿØŸäÿØÿ© [{name}](https://t.me/{ii}) ÿ®ŸÄ {count} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            my_tmm = db.get(f"my_tmm_{user_id}") if db.exists(f"my_tmm_{user_id}") else []
            if channel_username not in my_tmm:
                my_tmm.append(channel_username)
                db.set(f"my_tmm_{user_id}", my_tmm)
    else:
        bot.reply_to(msg, "*ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÖÿ¥ÿ±ŸÅ ÿ®Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ© ‚ùå*", parse_mode="Markdown")
        return
        
def get_amount_rect_Stores(message, rect_id):
    admins = db.get('admins')
    cid = message.from_user.id
    if not db.get(f'rect_stories_{cid}_proccess'): return
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
        return
    if amount < 1:
        bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
        return
    if amount > 200:
        bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
        return
    pr = rect_stories_price * amount
    acc = db.get(f'user_{message.from_user.id}')
    if int(pr) > acc['coins']:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
        return
    load_ = db.get('accounts')
    if len(load_) < amount:
        bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
        return
    x = bot.reply_to(message,f'‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿßÿ≥ÿ™Ÿàÿ±Ÿä ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÅŸá ÿßŸÑŸÉŸÖŸäÿ©<strong>{amount}</strong>')
    bot.register_next_step_handler(x, get_rect_stories_url, amount, rect_id)
    return

def get_amount(message, type):
    admins = db.get('admins')
    cid = message.from_user.id

    if type == 'leavs':
        if not db.get(f'leave_{cid}_proccess'): return
        if detect(message.text):
            url = message.text
            acc = db.get('accounts')
            amount = len(acc)
            if len(acc) > 10:
                amount = amount / 2
            true = 0
            for y in acc:
                true+=1
                if true >=amount:
                    break
                try:
                    o = asyncio.run(leave_chats(y['s'], url))
                    
                except Exception as e:
                    
                    continue
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <code>{true}</code> ÿ≠ÿ≥ÿßÿ® ŸäŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
                    
        else:
            url = message.text.replace('https://t.me/', '').replace('@', '')
            acc = db.get('accounts')
            amount = len(acc)
            if len(acc) > 10:
                amount = amount / 2
            true = 0
            for y in acc:
                
                if true >=amount:
                    break
                try:
                    o = asyncio.run(leave_chat(y['s'], url))
                   
                    true+=1
                except Exception as e:
                    
                    continue
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <strong>{true}</strong> ÿ≠ÿ≥ÿßÿ® ‚úÖ')
            return
            pass
    if type == 'tom_rect':
        if not db.get(f'rect_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ®ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß')
            bot.register_next_step_handler(x, get_amount_tom_rect, amount)
            return
    if type == 'tom_view':
        if not db.get(f'view_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ®ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß')
            bot.register_next_step_handler(x, get_amount_tom_view, amount)
            return
    if type == 'members':
        if not db.get(f'member_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 10:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = member_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ÿ±ÿßÿ®ÿ∑Ÿáÿß')
            bot.register_next_step_handler(x, get_url_mem, amount)
            return
    if type == 'membersp':
        if not db.get(f'memberp_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 10:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = member_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑÿÆÿßÿµÿ©')
            bot.register_next_step_handler(x, get_url_memp, amount)
            return
    if type == 'positive':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_positive_url, amount)
            return
    if type == 'story':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 10:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 1000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>1000</strong> ..',reply_markup=bk)
                return
            pr = story_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_story_url, amount)
            return
    if type == 'negative':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_negative_url, amount)
            return
    if type == 'react':
        if not db.get(f'react_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸá')
            bot.register_next_step_handler(x, get_react, amount)
            return
    if type == 'force_vote':
        if not db.get(f'vote_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong>',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>2000</strong>',reply_markup=bk)
                return
            pr = vote_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑ÿ© .')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount} ÿπÿ∂Ÿà\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
            bot.register_next_step_handler(x, get_time_force_vote, amount)
            return
    if type == 'forward':
        if not db.get(f'forward_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = forward_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_forward, amount)
            return
    if type == 'poll':
        if not db.get(f'poll_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = poll_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_poll, amount)
            return
    if type == 'poll2':
        if not db.get(f'poll_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = poll_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_poll_2, amount)
            return
    if type == 'reactsrandom':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿ™ŸÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_reacts_url, amount)
            return
    if type == 'view_stories':
        if not db.get(f'view_stories_{cid}_proccess'): 
            return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = view_stories_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿßÿ≥ÿ™Ÿàÿ±Ÿä ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÅŸá ÿßŸÑŸÉŸÖŸäÿ©<strong>{amount}</strong>')
            bot.register_next_step_handler(x, get_view_stories_url, amount)
            return
    if type == 'view':
        if not db.get(f'view_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = view_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_view_url, amount)
            return
    if type == 'view_2':
        if not db.get(f'view_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = view_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_view_url_2, amount)
            return
    if type == 'votes2':
        ##print("dfdsfsdfdsf")
        if not db.get(f'vote_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = vote_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑ÿ© .')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿ™ŸÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÉŸÖŸäÿ© {amount} ÿπÿ∂Ÿà\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
            bot.register_next_step_handler(x, get_time_votes_2, amount)
            return
    if type == 'votes3':
        ##print("dfdsfsdfdsf")
        if not db.get(f'vote_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = vote_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑ÿ© .')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿ™ŸÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÉŸÖŸäÿ© {amount} ÿπÿ∂Ÿà\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
            bot.register_next_step_handler(x, get_time_votes_3, amount)
            return
    if type == 'votes':
        if not db.get(f'vote_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>200</strong>',reply_markup=bk)
                return
            pr = vote_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑ÿ© .')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿ™ŸÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÉŸÖŸäÿ© {amount} ÿπÿ∂Ÿà\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
            bot.register_next_step_handler(x, get_time_votes, amount)
            return
    
    if type == 'msgs':
        if not db.get(f'spam_{cid}_proccess'): return
        if message.text:
            amount = None
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message,f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÑÿßÿ≠ŸÇÿß',reply_markup=bk)
                return
            load_ = db.get('accounts')
            if amount < 1:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ 10', reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ 200',reply_markup=bk)
                return
            
            if len(load_) < amount:
                bot.reply_to(message,text=f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            pr = spam_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if acc['coins'] < pr:
                bot.reply_to(message,f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑Ÿá',reply_markup=bk)
                return
            x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸäŸàÿ≤ÿ± ÿßŸà ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿπŸÖŸÑ ÿ≥ÿ®ÿßŸÖ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_spam, amount)
            return
    if type == 'userbot':
        if not db.get(f'userbot_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = userbot_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßÿßŸà ŸÖÿπÿ±ŸÅ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸÑŸá ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ')
            bot.register_next_step_handler(x, get_bot_user, amount)
            return
    if type == 'linkbot':
        if not db.get(f'linkbot_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = linkbot_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link_bot, amount)
            return
    if type == 'linkbot2':
        if not db.get(f'linkbot2_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link_bot2, amount)
            return
    if type == 'comments':
        if not db.get(f'comments_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 200:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>200</strong> ..',reply_markup=bk)
                return
            pr = comment_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿßŸÑÿ™ÿπŸÑŸäŸÇ ÿπŸÑŸäŸá \n\n Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÜÿ≥ÿÆ ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ© ŸÖŸÜ ŸÖÿ¨ŸÖŸàÿπÿ© ÿßŸÑŸÖŸÜÿßŸÇÿ¥ÿ© ŸàŸÑŸäÿ≥ ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ŸÜŸÅÿ≥Ÿáÿß')
            bot.register_next_step_handler(x, get_comments_url, amount)
            return
###########

def get_time_votes(message, amount):
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿ£ÿ±ÿ≥ŸÑ ŸÑŸä ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±')
    bot.register_next_step_handler(x, get_url_votes, amount, time)


def get_time_votes_2(message, amount):
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿ£ÿ±ÿ≥ŸÑ ŸÑŸä ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±')
    bot.register_next_step_handler(x, get_url_votes_2, amount, time)



def get_time_votes_3(message, amount):
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿ£ÿ±ÿ≥ŸÑ ŸÑŸä ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±')
    bot.register_next_step_handler(x, get_url_votes_3, amount, time)

def link_bot2(message, amount):
    url = message.text
    if 'https://t.me' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸà ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßÿ¨ÿ®ÿßÿ±Ÿâ')
        bot.register_next_step_handler(x, linkbot_chforce, amount, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
def dump_votes(message):

    url = message.text
    load_ = db.get('accounts')
    num = len(load_)
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ≥ÿ≠ÿ® ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : \n\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0,0
    for num in load_:
        try:
            x = asyncio.run(dump_votess(num['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                true += 1
            else:
                false += 1
            
        except Exception as e:
            ##print(f"Erorr: {e}")
            continue
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n\n‚Ä¢ ÿ™ŸÖ ÿ≥ÿ≠ÿ® : {false} ÿ™ÿµŸàŸäÿ™\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿ≥ÿ≠ÿ® : {true}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
  
def linkbot_chforce(message, amount, url): 
    stk.Add(message.from_user.id,"yes")
    channel_force = message.text.replace('https://t.me/', '').replace('@', '')
    bot_id, user_id = url.split("?start=")[0].split("/")[-1], url.split("?start=")[1]
    channel = "@" + bot_id
    tex = "/start " + user_id
    pr = linkbot2_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
                [
                    
                    [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
                ]
            )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(linkbot2(y['s'], channel, tex, channel_force))
            if x == 'o':
                continue
            if x == True:
                Mens = linkbot2_price * 1
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
##################
def get_comments_url(message, amount):
    url = message.text
    admins = db.get('admins')
    if 'https://t.me' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ™ÿπŸÑŸäŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
        bot.register_next_step_handler(x, comment_text, amount, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
def comment_text(message, amount, url):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    text = message.text
    if text:
        if len(text) > 100:
            bot.reply_to(message, text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿ≥ÿßŸÑÿ© ÿ™ŸÉŸàŸÜ ÿßŸÇŸÑ ŸÖŸÜ 100 ÿ≠ÿ±ŸÅ ')
            return
        acc = db.get(f'user_{message.from_user.id}')
        pr = comment_price * amount
        load_ = db.get('accounts')
        typerr = 'ÿ™ÿπŸÑŸäŸÇÿßÿ™ ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ'
        v=bot.reply_to(message,text=f'‚Ä¢ ÿ¨ÿßÿ±Ÿâ ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
        bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} .\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá: {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
        true,Mens, false = 0,0,0      
        key = mk(
            [
                
                [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
            ]
            )
        for y in load_:
            res = stk.Get(message.from_user.id)
            if res=="no": 
                bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
                break
            if true >= amount:
                break
            try:
                x = asyncio.run(send_comment(y['s'], url, text))
                Mens = linkbot2_price * 1
                true += 1
            except:
                false += 1
                continue
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        if true >= 1:
            acc['coins'] -= Mens
            db.set(f'user_{message.from_user.id}', acc)
        else:
            pass
        addord()
        user_id = message.from_user.id
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        buys+=1
        db.set(f"user_{user_id}_buys", int(buys))
        bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true} \n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false}\n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens} ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ',reply_markup=bk)
        return
########################

def link_bot(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    bot_id, user_id = url.split("?start=")[0].split("/")[-1], url.split("?start=")[1]
    channel = "@" + bot_id
    tex = "/start " + user_id
    pr = linkbot_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿ®ÿØŸàŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0, 0,0
        
    key = mk(
    [ 
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ])
    for y in load_:    
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(linkbot(y['s'], channel, tex))
            if x == 'o':
                continue
            if x == True: 
                Mens += linkbot_price * 1
                true += 1
            else:
                ##print(linkbot_price)
                
                false += 1
            x = bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:  
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_bot_user(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text.replace('https://t.me/', '').replace('@', '')
    pr = userbot_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿ®Ÿàÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(userbot(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens = userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
    
def get_url_spam(message, amount):
    url = message.text
    admins = db.get('admins')

    if 'https://t.me' in url or '@' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ≥ŸÑŸáÿß ŸÑŸÑÿ≠ÿ≥ÿßÿ®')
        bot.register_next_step_handler(x, get_text, amount, url)
        return

def get_text(message, amount, url):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    text = message.text
    if text:
        if len(text) > 1000:
            bot.reply_to(message, text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿ≥ÿßŸÑÿ© ÿ™ŸÉŸàŸÜ ÿßŸÇŸÑ ŸÖŸÜ 1000 ÿ≠ÿ±ŸÅ ')
            return
        acc = db.get(f'user_{message.from_user.id}')
        pr = spam_price * amount
        load_ = db.get('accounts')
        typerr = 'ÿ±ÿ≥ÿßÿ¶ŸÑ ŸÖÿ≤ÿπÿ¨ÿ© ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ'
        v=bot.reply_to(message,text=f'‚Ä¢ ÿ¨ÿßÿ±Ÿâ ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
        bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} .\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá: {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
        true,Mens, false = 0,0,0
        key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
        for y in load_:
            res = stk.Get(message.from_user.id)
            if res=="no": 
                bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
                break
            if true >= amount:
                break
            try:
                x = asyncio.run(send_message(y['s'], chat=url, text=text))
                Mens = userbot_price 
                true += 1
            except:
                false += 1
                continue
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        if true >= 1:
            
            acc['coins'] -= Mens
            db.set(f'user_{message.from_user.id}', acc)
        else:
            pass
        addord()
        user_id = message.from_user.id
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        buys+=1
        db.set(f"user_{user_id}_buys", int(buys))
        bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true} \n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false}\n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens} ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ',reply_markup=bk)
        return

def get_url_memp(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    load = db.get('accounts')
    info = get(message.from_user.id)
    price = member_price * amount
    if price > int(info['coins']):
        bot.reply_to(message,text=f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ <strong> {price - int(info["coins"])} </strong>',reply_markup=bk)
        return
    if len(load) < 1:
        bot.reply_to(message,text='ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ',reply_markup=bk)
        return
    typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ© ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™ \n‚Ä¢ ÿßŸÑŸÜŸàÿπ: {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(join_chatp(y['s'], url))
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            pass
    if true >= 1:
        
        info['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', info)
    else:
        pass
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true} .\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false}\n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens} ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ ',)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_url_mem(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if 'https://t.me' in url or '@' in url:
        if detect(url):
            load = db.get('accounts')
            info = get(message.from_user.id)
            price = member_price * amount
            if price > int(info['coins']):
                bot.reply_to(message,text=f'ŸÖÿßŸÖÿπŸÉ ŸÜŸÇÿßÿ∑ ŸÉÿßŸÅŸäÿ©ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ <strong> {price - int(info["coins"])} </strong> ŸÜŸÇÿ∑ÿ© ÿπŸÑŸÖŸàÿØ ÿ™ÿ±ÿ≥ŸÑ Ÿáÿ∞ÿß ÿßŸÑÿπÿØÿØ',reply_markup=bk)
                return
            if len(load) < 1:
                bot.reply_to(message,text='ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ',reply_markup=bk)
                return
            typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ'
            v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            db.set(f"serv_{message.from_user.id}", True)
            bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™ \n‚Ä¢ ÿßŸÑŸÜŸàÿπ: {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
            true,Mens, false = 0,0,0
            key = mk(
            [
                
                [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
            ]
            )
            for y in load:
                res = stk.Get(message.from_user.id)
                if res=="no": 
                    bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
                    break
                if true >= amount:
                    break
                try:
                    x = asyncio.run(join_chat(y['s'], url))
                    if x == 'o':
                        continue
                    if x == True:
                        Mens += userbot_price
                        true += 1
                    else:
                        false += 1
                    bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
                except Exception as e:
                   pass
            if true >= 1:
                
                info['coins'] -= Mens
                db.set(f'user_{message.from_user.id}', info)
            else:
                pass
            bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true} .\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false}\n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens} ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ ',)
            db.set(f"serv_{message.from_user.id}", False)
            return
        else:
            stk.Add(message.from_user.id,"yes")
            username = url.replace('https://t.me/', '').replace('@', '')
            load = db.get('accounts')
            info = get(message.from_user.id)
            price = member_price * amount
            if price > int(info['coins']):
                bot.reply_to(message,text=f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© : ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ <strong> {price - int(info["coins"])} </strong> ŸÜŸÇÿ∑ÿ©',reply_markup=bk)
                return
            if len(load) < 1:
                bot.reply_to(message,text=f'‚Ä¢ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ÿÆÿØŸÖÿ© ·µõÕ¢·µé·µñ'
            v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
            db.set(f"serv_{message.from_user.id}", True)
            true,Mens, false = 0,0,0
            for y in load:
                res = stk.Get(message.from_user.id)
                if res=="no": 
                    bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
                    break
                if true >= amount:
                    break
                try:
                    x = asyncio.run(join_chat(y['s'], username))
                    if x == 'o':
                        continue
                    if x == True:
                        Mens += userbot_price  
                        true += 1
                    else:
                        false += 1
                    bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
                except Exception as e:
                   
                    continue
            
            info['coins'] -= Mens
            db.set(f'user_{message.from_user.id}', info)
            addord()
            user_id = message.from_user.id
            buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
            buys+=1
            db.set(f"user_{user_id}_buys", int(buys))
            bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true} \n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false}\n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens} ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ',)
            db.set(f"serv_{message.from_user.id}", False)
            return
def check_url_stories(url: str):
        pattern = r'https?://t\.me/(\w+)/(\w+)/(\d+)'
        math = re.match(pattern, url)
        if math:
                return True
        else:
                return False
def chtime(msg):
    try:
        time = int(msg.text)
    except:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸàŸÇÿ™ ŸÉÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑ ‚ùå')
        return
    if time <0:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ÿßŸÇŸÑ ŸÇŸäŸÖÿ© ŸäŸÖŸÉŸÜ ÿßÿ∂ÿßŸÅÿ™Ÿáÿß ŸáŸä 0 ‚ùå')
        return
    if time >200:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ÿßŸÉÿ®ÿ± ŸÇŸäŸÖÿ© ŸäŸÖŸÉŸÜ ÿßÿØÿÆÿßŸÑŸáÿß ŸáŸä 200 ‚ùå')
        return
    db.set(f"tim_{msg.from_user.id}", int(time))
    bot.reply_to(msg, text='ŸÜÿ¨ÿßÿ≠ ÿå ÿ™ŸÖ ÿ≠ŸÅÿ∏ ÿßŸÑŸÇŸäŸÖÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
def checks(link):
    admins = db.get('admins')
    pattern = r"https?://t\.me/(\w+)/(\d+)"
    match = re.match(pattern, link)

    if match:
        username = match.group(1)
        post_id = match.group(2)
        return username, post_id
    else:
        return False

# def CHECK_USERNAME(bot: TeleBot, username : str):
#     try:
#         bot.get_chat(f'@{username}')
#         return True
#     except:
#         return False
    
def CHECK_USERNAME(username : str):
    url = "https://t.me/" + str(username)
    headers = {
        "User-Agent": generate_user_agent(),
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "ar-EG,ar;q=0.9,en-US;q=0.8,en;q=0.7",
    }

    response = requests.get(url, headers=headers)
    if (
        response.text.find(
            'If you have <strong>Telegram</strong>, you can contact <a class="tgme_username_link"'
        )
        >= 0
    ):return False
    else:return True
    
def get_react(message, amount):
    rs = ["üëç","ü§©","üéâ","üî•","‚ù§Ô∏è","ü•∞","ü•±","ü•¥","üåö","üçå","üíî","ü§®","üòê","üñï","üòà","üëé","üòÅ","üò¢","üí©","ü§Æ","ü§î","ü§Ø","ü§¨","üíØ","üòç","üïä","üê≥","ü§ù","üë®","ü¶Ñ","üéÉ","ü§ì","üëÄ","üëª","üóø","üçæ","üçì","‚ö°Ô∏è","üèÜ","ü§°","üå≠","üÜí","üôà","üéÖ","üéÑ","‚òÉÔ∏è","üíä"]
    if message.text in rs:
        x = bot.reply_to(message,f'‚Ä¢ ÿ™ŸÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÉŸÖŸäÿ© {amount}\n‚Ä¢ ÿßŸÑÿ™ŸÅÿßÿπŸÑ : {message.text}\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπŸÑŸäŸá')
        bot.register_next_step_handler(x, get_url_react, amount, message)
    else:
        x = bot.reply_to(message,f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        bot.register_next_step_handler(x, get_react, amount)
        return
    

def get_url_votes(message, amount, time):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(vote_one(y['s'], url, time))
           
            if x == 'o':
                continue
            if x == True:
                Mens += vote_price

                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÉ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_positive_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ≠ÿßŸÑŸä ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸäÿ¨ÿßÿ®Ÿä [üëç,‚ù§,üî•,üòç,ü§©]'
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    nume = int(amount)
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    for y in load_:
        if true >= amount:
            break
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        try:
            x = asyncio.run(positive(y['s'], url))
            if x == 'o':
                continue
            if x == True:
                Mens += react_price 
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        acc = db.get(f'user_{message.from_user.id}')
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False) 
    addord()
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    return
def get_negative_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ≠ÿßŸÑŸä ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿ≥ŸÑÿ®Ÿä [üëé,üí©,ü§Æ,ü§¨,üñï]'
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    nume = int(amount)
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    for y in load_:
        if true >= amount:
            break
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        try:
            x = asyncio.run(negative(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens += react_price 
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        acc = db.get(f'user_{message.from_user.id}')
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)


def get_url_votes_3(message, amount, time):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(vote_one_and_3(y['s'], url, time))
           
            if x == 'o':
                continue
            if x == True:
                Mens += vote_price

                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÉ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_url_votes_2(message, amount, time):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(vote_one_and_veos(y['s'], url, time))
           
            if x == 'o':
                continue
            if x == True:
                Mens += 15

                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÉ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return


  


def get_url_react(message, amount, like):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    like = like.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßÿÆÿ™Ÿäÿßÿ±Ÿä'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(reactions(y['s'], url, like))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÉ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
def get_reacts_url(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπÿ¥Ÿàÿßÿ¶Ÿä'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : \n\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(reaction(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
def get_url_forward(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = forward_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™Ÿàÿ¨ŸäŸáÿßÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(forward(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price 
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
def get_time_force_vote(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ≠ÿßŸÑŸä ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿ£ÿ±ÿ≥ŸÑ ŸÑŸä ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑÿÆÿßÿµÿ© ')
    bot.register_next_step_handler(x, get_url_force_vote, amount, time)
def get_url_force_vote(message, amount, time):
    invite_link = message.text
    if "https://t.me/" not in invite_link:
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n‚Ä¢ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© : {invite_link}\n\n‚Ä¢ ÿßŸÜÿ≥ÿÆ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿπŸÑŸäŸá ŸÅ ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑÿÆÿßÿµÿ©\n‚Ä¢ ŸÖÿ´ÿßŸÑ : \nhttps://t.me/c/1896391380/58')
    bot.register_next_step_handler(x, get_url_force_vote_link, invite_link, amount, time)
def get_url_force_vote_link(message, invite_link, amount, time):
    url = message.text
    if "https://t.me/c/" not in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    msg_id = url.split("/")[-1]
    pr = vote_price * amount
    load_ = db.get('accounts')
    typerr = 'ÿ™ÿµŸàŸäÿ™ÿßÿ™ ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ©'
    db.set(f"serv_{message.from_user.id}", True)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    nume = int(amount)
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    for y in load_:
        if true >= amount:
            break
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        try:
            x = asyncio.run(force_vote(y['s'], invite_link, msg_id, time))
           
            if x == 'o':
                continue
            if x == True:
                Mens += vote_price 
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        acc = db.get(f'user_{message.from_user.id}')
        for ix in range(true):
            acc['coins'] -= vote_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    return
def get_url_poll(message, amount):
    admins = db.get('admins')
    url = message.text
    x = checks(url)
    if x:
        channel, msg_id = x
    if not checks(url):
        bot.reply_to(message,text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    try:
        mm = "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ŸÅŸä ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°\n\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ Ÿäÿ™ÿ±ÿßŸàÿ≠ ÿ®ŸäŸÜ 0 : 9\n‚Ä¢ ÿπŸÑŸÖÿß ÿ®ÿßŸÜ ÿßŸàŸÑ ÿßÿÆÿ™Ÿäÿßÿ± ŸäŸÉŸàŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑÿ© 0"
        x = bot.reply_to(message, mm, parse_mode='HTML')
        bot.register_next_step_handler(x, start_poll, amount, url)
    except Exception as e:
        bot.reply_to(message, "ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÖÿ≥Ÿàÿ≠ÿ© ÿ£Ÿà ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ÿ©.")
        ##print(e)
        return
    

def get_url_poll_2(message, amount):
    admins = db.get('admins')
    url = message.text
    x = checks(url)
    if x:
        channel, msg_id = x
    if not checks(url):
        bot.reply_to(message,text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    try:
        mm = "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ŸÅŸä ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°\n\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ Ÿäÿ™ÿ±ÿßŸàÿ≠ ÿ®ŸäŸÜ 0 : 9\n‚Ä¢ ÿπŸÑŸÖÿß ÿ®ÿßŸÜ ÿßŸàŸÑ ÿßÿÆÿ™Ÿäÿßÿ± ŸäŸÉŸàŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑÿ© 0"
        x = bot.reply_to(message, mm, parse_mode='HTML')
        bot.register_next_step_handler(x, start_poll_2, amount, url)
    except Exception as e:
        bot.reply_to(message, "ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÖÿ≥Ÿàÿ≠ÿ© ÿ£Ÿà ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ÿ©.")
        ##print(e)
        return
 
def start_poll_2(message, amount, url):
    stk.Add(message.from_user.id,"yes")
    num = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = poll_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    
    key = mk(
        [
            
            [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
        ]
        )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(poll_2(y['s'], url, int(num)))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
            
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
            
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
def start_poll(message, amount, url):
    stk.Add(message.from_user.id,"yes")
    num = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = poll_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ : ')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    
    key = mk(
        [
            
            [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
        ]
        )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(poll(y['s'], url, int(num)))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
            
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_rect_stories_url(message, amount, rec_list):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not check_url_stories(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    load_ = db.get('accounts_t')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿä'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(RECTION_STORIES(url,REACTIONS_LIST[rec_list],y))
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† 
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_view_stories_url(message, amount):
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not check_url_stories(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    load_ = db.get('accounts_t')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿä '
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(WITH_STORIES(url, y))
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† 
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return

def get_view_url(message, amount):
    # ##print('vi 1')
    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ¥ÿßŸáÿØÿßÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(view(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return


def get_view_url_2(message, amount):
    ##print('vi 2')

    stk.Add(message.from_user.id,"yes")
    admins = db.get('admins')
    url = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ¥ÿßŸáÿØÿßÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ :')
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true,Mens, false = 0,0,0
    key = mk(
    [
        
        [btn(text='ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ∑ŸÑÿ® Ÿàÿ•ÿ≥ÿ™ÿ±ÿØÿßÿØ ÿßŸÑÿ±ÿµŸäÿØ‚ôªÔ∏è', callback_data='Stop1')]
    ]
    )
    for y in load_:
        res = stk.Get(message.from_user.id)
        if res=="no": 
            bot.send_message(message.chat.id, "ÿ™ŸÖ ÿßŸÑÿßŸäŸÇÿßŸÅ")
            break
        if true >= amount:
            break
        try:
            x = asyncio.run(view2(y['s'], url))
           
            if x == 'o':
                continue
            if x == True:
                Mens += userbot_price
                true += 1
            else:
                false += 1
            bot.edit_message_text(chat_id=message.chat.id,text=f"""‚åÅÔ∏ôÿ™ŸÖ ÿÆÿµŸÖ ‚Ü´¬† {Mens} IQD ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ 
‚åÅÔ∏ôŸàÿ®ÿØÿ£ ÿ±ÿ¥ŸÇ ‚Ü´ {amount}¬† ŸÑÿßŸäŸÉ
‚åÅÔ∏ôÿ™ŸÖ ŸàÿµŸàŸÑ ‚Ü´ {true}
‚åÅÔ∏ôŸÑŸÖ ŸäÿµŸÑ ‚Ü´ {false}
‚åÅÔ∏ôÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ü´‚§à {url}

""",message_id=v.message_id,reply_markup=key)
        except Exception as e:
            ##print(e)
            continue
    if true >= 1:
        
        acc['coins'] -= Mens
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {Mens}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
def check_user(id):
    if not db.get(f'user_{id}'):
        return False
    return True

def set_user(id, data):
    db.set(f'user_{id}', data)
    return True

def get(id):
    ##print(db.get(f'user_{id}'))
    return db.get(f'user_{id}')

def delete(id):
    return db.delete(f'user_{id}')

def trend():
    k = db.keys("user_%")
    users = []
    for i in k:
        
        try:
            g = db.get(i[0])
            d = g["id"]
           
            users.append(g)
        except:
            continue
    data = users
    sorted_users = sorted(data, key=lambda x: len(x["users"]), reverse=True)
    result_string = "‚Ä¢<strong> ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿßŸÉÿ´ÿ± ŸÖÿ¥ÿßÿ±ŸÉÿ© ŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàŸâ :</strong>\n"
    EOMJ = {
            0:'üëë',
            1:'üèÜ',
            2:'üèÖ',
            3:'üéñ',
        }
    EOMJ1 = {
        0:'üèÜ',
        1:'ü•à',
        2:'ü•â',
    }
    for key, user in enumerate(sorted_users[:4]):
        
        
        if len(user['users']) == 10:
            GivtPonts(user['id'],1000,len(user['users']))
        if len(user['users']) == 100:
            GivtPonts(user['id'],15000,len(user['users']))
        if len(user['users']) == 1000:
            GivtPonts(user['id'],120000,len(user['users']))
        # result_string += f"{EOMJ[key]}: ({len(user['users'])}) > {user['id']}\n"
        result_string += f"{EOMJ[key]}: ({len(user['users'])}) >  <a href='tg://user?id={user['id']}'> {user['id']}</a>\n"
    result_string +='‚Ä¢ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ£ŸÉÿ´ÿ± ŸÜŸÇÿßÿ∑ÿßŸã ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ \n'

    sorted_users2 = sorted(data, key=lambda x: int(x["coins"]), reverse=True)
    for key, user in enumerate(sorted_users2[:3]):
        result_string += f"{EOMJ1[key]} :( {user['coins']} ) > {user['id']} \n"

    return (result_string)


def detect(text):
    pattern = r'https:\/\/t\.me\/\+[a-zA-Z0-9]+'
    match = re.search(pattern, text)
    return match is not None
def casting(message):
    admins = db.get('admins')
    idm = message.message_id
    d = db.keys('user_%')
    good = 0
    bad = 0
    bot.reply_to(message, f'‚Ä¢ ÿ¨ÿßÿ±Ÿä ÿßŸÑÿßÿ∞ÿßÿπÿ© ÿßŸÑŸâ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
    for user in d:
        try:
            id = db.get(user[0])['id']
            bot.copy_message(chat_id=id, from_chat_id=message.from_user.id, message_id=idm)
            good+=1
        except:
            bad+=1
            continue
    bot.reply_to(message, f'‚Ä¢ ÿßŸÉÿ™ŸÖŸÑÿ™ ÿßŸÑÿßÿ∞ÿßÿπÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸâ : {good}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸâ : {bad} ')
    return
def adminss(message, type):
    admins = db.get('admins')
    if type == 'add':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('admins')
        if id in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿßÿØŸÖŸÜ ÿ®ÿßŸÑŸÅÿπŸÑ')
            return
        else:
            d.append(id)
            db.set('admins', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ™Ÿá ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
    if type == 'delete':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('admins')
        if id not in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ŸÑŸäÿ≥ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
            return
        else:
            d.remove(id)
            db.set('admins', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßÿ∞ÿßŸÑÿ© ÿßŸÑÿπÿ∂Ÿà ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
    if type == 'change_price':
        nn = db.get(message.text) if db.exists(message.text) else "ŸÑÿß ŸäŸàÿ¨ÿØ"
        x = bot.reply_to(message, f'‚åÅÔ∏ôÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ≠ÿßŸÑŸä ŸÑŸáÿ∞ÿß ÿßŸÑŸÖŸÜÿ™ÿ¨ : {nn}\n\n‚åÅÔ∏ôÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ¨ÿØŸäÿØ !')
        bot.register_next_step_handler(x, change_price, type)
def change_price(message, nn):
    try:
        new = int(message.text)
    except:
        bot.reply_to(message, f'ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑')
        return
    db.set(f"{nn}", int(new))
    bot.reply_to(message, f'‚åÅÔ∏ôÿ™ŸÖ ÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {nn}\n\n‚åÅ ÿßŸÑŸâ : {new}')
def banned(message, type):
    admins = db.get('admins')
    if type == 'ban':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('badguys')
        if id in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ŸÖÿ≠ÿ∏Ÿàÿ± ŸÖŸÜ ŸÇÿ®ŸÑ ')
            return
        else:
            d.append(id)
            db.set('badguys', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿ≠ÿ∏ÿ± ÿßŸÑÿπÿ∂Ÿà ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™')
            return
    if type == 'unban':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('badguys')
        if id not in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖÿ≠ÿ∏Ÿàÿ± ')
            return
        else:
            d.remove(id)
            db.set('badguys', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ± ÿßŸÑÿπÿ∂Ÿà ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
def get_info(message):
    id = message.text
    try:
        id = int(id)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    d = db.get(f'user_{id}')
    if not d:
        bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ')
        return
    # {'id': user_id, 'users': [], 'coins': 0, 'paid': False}
    id, coins, users = d['id'], d['coins'], len(d['users'])
    bot.reply_to(message, f'‚Ä¢ ÿßŸäÿØŸäŸá : {id}.\n‚Ä¢ ŸÜŸÇÿßÿ∑Ÿá: {coins} ŸÜŸÇÿ∑ÿ© \n‚Ä¢ ÿπÿØÿØ ŸÖÿ¥ÿßÿ±ŸÉÿ™Ÿá ŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ©{users}')
    return
def send(message, tid):
    id = message.text
    if tid != USER_TEMP[message.from_user.id]['trans']['id']:
        return
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ')
        return
    if not db.exists(f'user_{id}'):
        bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚ùå')
        return
    if int(message.text) == int(message.from_user.id):
        bot.reply_to(message, f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ŸÑŸÜŸÅÿ≥ŸÉ ‚ùå')
        return
    if message.text == "/get_bot":
        bot.reply_to(message, f'{bbs}\n{bbb}')
        return
    x2 = bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ™ÿ≠ŸàŸäŸÑŸáÿß ŸÑŸÄ {id}')
    bot.register_next_step_handler(x2, get_amount_send, id, tid)
def get_info(message):
    id = message.text
    try:
        id = int(id)
    except:
        bot.reply_to(message, f'ÿßŸÑÿßŸäÿØŸä ÿ∫ŸÑÿ∑ ..')
        return
    d = db.get(f'user_{id}')
    if not d:
        bot.reply_to(message, f'ŸÖÿßŸÅŸä ÿπÿ∂Ÿà..')
        return
    # {'id': user_id, 'users': [], 'coins': 0, 'paid': False}
    id, coins, users = d['id'], d['coins'], len(d['users'])
    bot.reply_to(message, f'ŸÑŸÉŸäÿ™ ÿßŸÑÿπÿ∂Ÿà:\nÿßŸäÿØŸäŸá: {id} .\nŸÜŸÇÿßÿ∑Ÿá: {coins} ŸÜŸÇÿ∑ÿ© .\nÿπÿØÿØ ÿßŸÑŸÜÿßÿ≥ ÿßŸÑŸâ ŸÅÿßŸäÿ™ŸäŸÜ ÿ®ÿ±ÿßÿ®ÿ∑Ÿá: {users}')
    return
def get_amount_send(message, id, tid):
    if tid != USER_TEMP[message.from_user.id]['trans']['id']:
        return
    amount = message.text
    try:
        amount = int(message.text)
    except:
        te = bot.reply_to(message, f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿπÿØÿØ ŸÅŸÇÿ∑ ')
        return
    to_user = db.get(f'user_{id}')
    from_user = db.get(f'user_{message.from_user.id}')
    if amount < 1:
        bot.reply_to(message, f'‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜ ÿ™ÿ≠ŸàŸäŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ 1')
        return
    if from_user['coins'] < amount:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ÿ≠ŸàŸäŸÑ Ÿáÿ∞ÿß ÿßŸÑŸÖÿ®ŸÑÿ∫ \n‚Ä¢ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {amount-from_user["coins"]} ŸÜŸÇÿ∑ÿ©')
        return
    from_user['coins']-=amount
    db.set(f'user_{message.from_user.id}', from_user)
    to_user['coins']+=amount
    db.set(f'user_{id}', to_user)
    try:
        bot.send_message(chat_id=id, text=f"‚Ä¢ [üë§] ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ {amount} ŸÖŸÜ ŸÜŸÇÿßÿ∑\n\n- ŸÖŸÜ ÿßŸÑÿ¥ÿÆÿµ : {message.from_user.id}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑŸÇÿØŸäŸÖÿ© : {to_user['coins']}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿßŸÜ : {to_user['coins']+amount}")
    except: pass
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿßÿ±ÿ≥ÿßŸÑ <strong>{amount}</strong> ŸÜŸÇÿ∑ÿ©\n ŸÖŸÜ <code>{message.from_user.id}</code> ..')
    bot.reply_to(message, f"‚Ä¢ [üë§] ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ {amount} ŸÖŸÜ ŸÜŸÇÿßÿ∑\n\n- ÿßŸÑŸâ ÿßŸÑÿ¥ÿÆÿµ : {id}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑŸÇÿØŸäŸÖÿ© : {from_user['coins']}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿßŸÜ : {from_user['coins']-amount}")
    user_id = message.from_user.id
    trans = int(db.get(f"user_{user_id}_trans")) if db.exists(f"user_{user_id}_trans") else 0
    count_trans = trans + 1
    db.set(f"user_{user_id}_trans", int(count_trans))
    return
def addpoints(message):
    id = message.text
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    x = bot.reply_to(message, '‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸÉŸÖŸäÿ©')
    bot.register_next_step_handler(x, addpoints_final, id)
def addpoints_final(message, id):
    amount = message.text
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿßŸÑŸÉŸÖŸäÿ© ÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑')
        return
    b = db.get(f'user_{id}')
    b['coins']+=amount
    db.set(f'user_{id}', b)
    bot.reply_to(message, f'ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : {b["coins"]} ')
    return
def setfo(message):
    users = message.text.replace('https://t.me/', '').replace('@',  '').split(' ')
    db.set('force', users)
    bot.reply_to(message, 'ÿ™ŸÖÿ™ ÿ®ŸÜÿ¨ÿßÿ≠')
    return


def GivtPonts(id,pont,tg):
    GV = Givt()
    res = GV.Get(id)
   
    if res[1]=="false" and tg >= 10:
        ##print("10")
        threading.Thread(target=GV.Add,args=(id,"true",res[2],res[3])).start()
        
        b = db.get(f'user_{id}')
        b['coins']+=1000
        db.set(f'user_{id}', b)
        bot.send_message(id, f'‚Ä¢ ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸâ 1000 ŸÜŸÇÿ∑ÿ© ŸáÿØŸäÿ© üéÅ ŸÑÿ£ŸÜŸÉ ŸÇŸÖ ÿ®ÿØÿπŸàÿ© {tg} ÿπÿ∂Ÿà .')   
    if res[2]=="false" and tg >= 100:
        ##print("100")
        threading.Thread(target=GV.Add,args=(id,res[1],"true",res[3])).start()
       
        b = db.get(f'user_{id}')
        b['coins']+=15000
        db.set(f'user_{id}', b)
        bot.send_message(id, f'‚Ä¢ ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸâ 15000 ŸÜŸÇÿ∑ÿ© ŸáÿØŸäÿ© üéÅ ŸÑÿ£ŸÜŸÉ ŸÇŸÖ ÿ®ÿØÿπŸàÿ© {tg} ÿπÿ∂Ÿà .')   
    if res[3]=="false" and tg >= 1000:
        ##print("1000")
        threading.Thread(target=GV.Add,args=(id,res[1],res[2],"true")).start()
        
        b = db.get(f'user_{id}')
        b['coins']+=12000
        db.set(f'user_{id}', b)
        bot.send_message(id, f'‚Ä¢ ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸâ 12000 ŸÜŸÇÿ∑ÿ© ŸáÿØŸäÿ© üéÅ ŸÑÿ£ŸÜŸÉ ŸÇŸÖ ÿ®ÿØÿπŸàÿ© {tg} ÿπÿ∂Ÿà .')   

def vipp(message, type):
    if type == 'add':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get(f"user_{id}")
        if d is None:
            bot.reply_to(message, f'‚Ä¢ ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™')
            return
        d['premium'] = True
        db.set(f'user_{id}', d)
        x = bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿßŸäÿßŸÖ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÑÿπÿ∂Ÿà ')
        bot.register_next_step_handler(x, addviptime, id)
        return
    if type == 'les':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get(f"user_{id}")
        if d is None:
            bot.reply_to(message, f'‚Ä¢ ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™')
            return
        d['premium'] = False
        db.set(f'user_{id}', d)
        bot.reply_to(message, f"ÿ™ŸÖ ÿßŸÜŸáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑŸÄ ·µõÕ¢·µé·µñ ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ {id}")

def addviptime(message,id):
    try:
        timenv = int(message.text)
    except:
        bot.reply_to(message, f"ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑")
        return
    d = db.get(f"user_{id}")
    d['premium'] = True
    db.set(f'user_{id}', d)
    users = {}
    noww = time.time()
    users['vip'] = noww
    db.set(f'vip_{id}', users)
    db.set(f"vipp_{id}_time", int(timenv))
    us = bot.get_chat(id)
    if us.username is None:
        user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
    else:
        user = "@" + us.username
    name = us.first_name
    today = datetime.date.today()
    end_date = today + datetime.timedelta(days=int(timenv))
    now = datetime.datetime.now()
    HM = now.strftime("%p")
    if str(HM) == str("PM"):
        how = "ŸÖÿ≥ÿßÿ°Ÿã"
    else:
        how = "ÿµÿ®ÿßÿ≠ÿßŸã"
    hour = now.hour
    minutes = now.minute
    seconds = now.second
    d = int(timenv)
    h = int(timenv) * 24
    m = int(timenv) * 24 * 60
    s = int(timenv) * 24 * 60 * 60
    reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n*‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:*\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
    reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
    bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
    bot.send_message(chat_id=int(id), text=reb2, parse_mode="Markdown")
def account(call):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.answer_callback_query(call.id, text="ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäÿß ‚öôÔ∏è",show_alert=True)
        return False
    cid, data, mid = call.from_user.id, call.data, call.message.id
    e = 5
    how = ""
    if e == 5:
        x = giiiift(cid)
        if x is not None:
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            if hours > 0:
                how = f"{hours} ÿ≥ÿßÿπÿ©"
            elif minutes > 0:
                how = f"{minutes} ÿØŸÇŸäŸÇÿ©"
            else:
                how = f"{seconds} ÿ´ÿßŸÜŸäÿ©"
        else:
            how = "ŸäŸÖŸÉŸÜŸÉ ÿßŸÑŸÖÿ∑ÿßŸÑÿ®ÿ© ÿ®Ÿáÿß üéÅ"
        acc = get(cid)
        user_id = call.from_user.id
        coins, users = acc['coins'], len(get(cid)['users'])
        info = db.get(f"user_{call.from_user.id}")
        daily_count = int(db.get(f"user_{user_id}_daily_count")) if db.exists(f"user_{user_id}_daily_count") else 0
        daily_gift = int(db.get("daily_gift")) if db.exists("daily_gift") else 30
        all_gift = daily_count * daily_gift
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        trans = int(db.get(f"user_{user_id}_trans")) if db.exists(f"user_{user_id}_trans") else 0
        prem = 'Premium' if info['premium'] == True else 'Free'
        codes = int(db.get(f"cd_{user_id}")) if db.exists(f"cd_{user_id}") else 0
        po = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
        textt = f'''
‚Ä¢ üóÉÔ∏è] ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ 

‚Ä¢ ‚ùáÔ∏è] ÿπÿØÿØ ŸÜŸÇÿßÿ∑ ÿ≠ÿ≥ÿßÿ®ŸÉ : {coins}
‚Ä¢ ‚ùáÔ∏è] ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑÿ™Ÿä ÿßÿ≥ÿ™ÿÆÿØŸÖÿ™Ÿáÿß : {po}

‚Ä¢ üåÄ] ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑÿßÿ≠ÿßŸÑŸá ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {users}
‚Ä¢ üë§] ŸÜŸàÿπ ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿØÿßÿÆŸÑ ÿßŸÑÿ®Ÿàÿ™ : <code>{prem}</code>
‚Ä¢ üìÆ] ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ∑ŸÑÿ®ÿ™Ÿáÿß : {buys}
‚Ä¢ ‚ôªÔ∏è] ÿπÿØÿØ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {trans}

‚Ä¢ ‚ùáÔ∏è] ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÑŸä ÿ¨ŸÖÿπÿ™Ÿáÿß ŸÖŸÜ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© : {all_gift}
‚Ä¢ üí≥] ÿπÿØÿØ ÿßŸÉŸàÿßÿØ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑÿ™Ÿä ÿßÿ≥ÿ™ÿÆÿØŸÖÿ™Ÿáÿß : {codes}
‚Ä¢ üéÅ] ÿπÿØÿØ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© ÿßŸÑÿ™Ÿä ÿ¨ŸÖÿπÿ™Ÿáÿß : {daily_count}
‚Ä¢ üéÅ] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÑŸáÿØŸäÿ© : {how}'''
        keys = mk(row_width=2)
        btn1 = btn('ÿßŸÑŸáÿØŸäÿ© ÿßŸÑŸäŸàŸÖŸäÿ© üéÅ', callback_data='dailygift')
        btn3 = btn('ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© üåÄ',callback_data='share_link')
        keys.add(btn3, btn1)
        keys.add(btn('‚Äπ ÿ±ÿ¨Ÿàÿπ ‚Üª‚Ä∫', callback_data='back'))
        bot.edit_message_text(text=textt,chat_id=cid,message_id=mid,reply_markup=keys)
def lespoints(message):
    if message.text == "/start":
        start_message(message)
        return
    id = message.text
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    x = bot.reply_to(message, '‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸÉŸÖŸäÿ© :')
    bot.register_next_step_handler(x, lespoints_final, id)
def lespoints_final(message, id):
    if message.text == "/start":
        start_message(message)
        return
    amount = message.text
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿßŸÑŸÉŸÖŸäÿ© ÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑')
        return
    b = db.get(f'user_{id}')
    b['coins']-=amount
    db.set(f'user_{id}', b)
    bot.reply_to(message, f'ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : {b["coins"]} ')
def check_dayy(user_id):
    users = db.get(f"user_{user_id}_giftt")
    noww = time.time()    
    WAIT_TIMEE = 24 * 60 * 60
    if db.exists(f"user_{user_id}_giftt"):
        last_time = users['timee']
        elapsed_time = noww - last_time
        if elapsed_time < WAIT_TIMEE:
            remaining_time = WAIT_TIMEE - elapsed_time
            return int(remaining_time)
        else:
            users['timee'] = noww
            db.set(f'user_{user_id}_giftt', users)
            return None
    else:
        users = {}
        users['timee'] = noww
        db.set(f'user_{user_id}_giftt', users)
        return None
    

def change_points(msg):
    link = msg.text
    if "https://t.me/EEObot?start=" not in str(link):
        bot.reply_to(msg, f"‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠",reply_markup=bk)
        return
    try:
        forw = link.split("?start=")[1]
    except:
        bot.reply_to(msg, f"‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠",reply_markup=bk)
        return
    x = asyncio.run(milliar(forw))
    if x == False:
        bot.reply_to(msg, f"- ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ ÿßŸà ÿßŸÜÿ™Ÿáÿ™ ŸÖÿØÿ© ÿßŸÑÿ±ÿßÿ®ÿ∑ !",reply_markup=bk)
        return
    else:
        try:
            points = int(x)
        except:
            bot.reply_to(msg, f"‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿßÿ®ÿ∑ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠",reply_markup=bk)
            return
        if points <500:
            bot.reply_to(msg, f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ÿßŸÑÿ≠ÿØ ÿßŸÑÿßÿØŸÜŸä ŸÑÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸáŸà 500 ŸÜŸÇÿ∑ÿ© ŸÜ ÿ®Ÿàÿ™ ÿßŸÑŸÖŸÑŸäÿßÿ±",reply_markup=bk)
            return
        bef = points / 2
        b = db.get(f'user_{msg.from_user.id}')
        b['coins']+=int(bef)
        db.set(f'user_{msg.from_user.id}', b)
        bot.reply_to(msg, f"‚Ä¢ ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ÿπŸÖŸÑŸäÿ© ÿ™ÿ≠ŸàŸäŸÑ {points} ŸÜŸÇÿ∑ÿ© ‚úÖ\n\n‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {int(bef)} ŸÜŸÇÿ∑ÿ© ÿßŸÑŸâ ÿ≠ÿ≥ÿßÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ",reply_markup=bk)

def get_amount_tom_view(message, amount):
    try:
        count = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    all = count * int(amount)
    acc = db.get(f'user_{message.from_user.id}')
    if int(all) > acc['coins']:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{all}</strong> ŸÜŸÇÿ∑ÿ©')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ : {count}\n\n‚Ä¢ ÿßÿ±ŸÅÿπ ÿßŸÑÿßŸÜ ÿßŸÑÿ®Ÿàÿ™ @x31bot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿå ÿ´ŸÖ ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨ŸäŸá ÿßŸä ÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™')
    bot.register_next_step_handler(x, get_amount_tom_view_forward, amount, count)
######################### rad edit rect
def get_amount_tom_rect(message, amount):
    try:
        count = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    all = count * int(amount)
    acc = db.get(f'user_{message.from_user.id}')
    if int(all) > acc['coins']:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ  <strong>{all}</strong> ŸÜŸÇÿ∑ÿ©')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿπÿØÿØ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ : {count}\n\n‚Ä¢ ÿßÿ±ŸÅÿπ ÿßŸÑÿßŸÜ ÿßŸÑÿ®Ÿàÿ™ @x31bot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿå ÿ´ŸÖ ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨ŸäŸá ÿßŸä ÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™')
    bot.register_next_step_handler(x, get_amount_tom_rect_forward, amount, count)

def get_amount_tom_rect_forward(message, amount, count):
    if message.forward_from_chat:
        forward_chat_type = message.forward_from_chat.type
        if forward_chat_type == 'channel':
            user = "@" + message.forward_from_chat.username
            username = message.forward_from_chat.username
            chat_member = bot.get_chat_member(user, bot.get_me().id)
            if str(chat_member.status) == "administrator":
                db.set(f"tom_r_{username}", int(count))
                db.set(f"type_r_{username}", "view")
                db.set(f"amount_r_{username}", int(amount))
                tom_ch = db.get("tom_r_ch") if db.exists("tom_r_ch") else []
                tom_ch.append(username)
                db.set("tom_r_ch", tom_ch)
                bot.reply_to(message, text='‚Ä¢ ÿ™ŸÖ ÿ≠ŸÅÿ∏ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ÿå ÿ≥Ÿäÿ™ŸÖ ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß')
                all = int(count) * int(amount)
                acc = db.get(f'user_{message.from_user.id}')
                acc['coins'] -= all
                db.set(f'user_{message.from_user.id}', acc)
            else:
                bot.reply_to(message, text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÖÿ¥ÿ±ŸÅ ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ©')
                return
        else:
            bot.reply_to(message, text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨Ÿäÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
    else:
        bot.reply_to(message, text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨Ÿäÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return

#############################
def get_amount_tom_view_forward(message, amount, count):
    if message.forward_from_chat:
        forward_chat_type = message.forward_from_chat.type
        if forward_chat_type == 'channel':
            user = "@" + message.forward_from_chat.username
            username = message.forward_from_chat.username
            chat_member = bot.get_chat_member(user, bot.get_me().id)
            if str(chat_member.status) == "administrator":
                db.set(f"tom_{username}", int(count))
                db.set(f"type_{username}", "view")
                db.set(f"amount_{username}", int(amount))
                tom_ch = db.get("tom_ch") if db.exists("tom_ch") else []
                tom_ch.append(username)
                db.set("tom_ch", tom_ch)
                bot.reply_to(message, text='‚Ä¢ ÿ™ŸÖ ÿ≠ŸÅÿ∏ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ÿå ÿ≥Ÿäÿ™ŸÖ ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ™ŸÑŸÇÿßÿ¶Ÿäÿß')
                all = int(count) * int(amount)
                acc = db.get(f'user_{message.from_user.id}')
                acc['coins'] -= all
                db.set(f'user_{message.from_user.id}', acc)
            else:
                bot.reply_to(message, text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÖÿ¥ÿ±ŸÅ ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ©')
                return
        else:
            bot.reply_to(message, text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨Ÿäÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
    else:
        bot.reply_to(message, text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ŸÇŸÖ ÿ®ÿßÿπÿßÿØÿ© ÿ™Ÿàÿ¨Ÿäÿ© ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
        
############

@bot.channel_post_handler(func=lambda message: True , content_types=['text', 'photo', 'video', 'audio'])
def handle_new_channel_post(message):
    tom_ch = db.get("tom_ch") if db.exists("tom_ch") else []
    tom_r_ch = db.get("tom_r_ch") if db.exists("tom_r_ch") else []
    # print('on message 1')
    if message.chat.username not in tom_ch and message.chat.username not in tom_r_ch:
        return
    # print('on message 2')
    
    if message.chat.username in tom_r_ch:
        count = int(db.get(f"tom_r_{message.chat.username}"))
        type = db.get(f"type_r_{message.chat.username}")
        amount = db.get(f"amount_r_{message.chat.username}")
        load_ = db.get('accounts')
        true = 0
        false = 0

        if count <=1:
            tom_ch = db.get("tom_r_ch") if db.exists("tom_r_ch") else []
            tom_ch.remove(message.chat.username)
            db.set("tom_r_ch",tom_ch)
            return
        
        channel = message.chat.username
        msg_id = message.message_id
        for y in load_:
            if true >= amount:
                break
            try:

                x = asyncio.run(tom_rect(y['s'], channel, msg_id))
            except Exception as e:
                # print(e)
                pass
                # return
        count = int(db.get(f"tom_{message.chat.username}"))
        aft = count - 1
        db.set(f"tom_{message.chat.username}", aft)
        
    
    if message.chat.username in tom_ch:
        count = int(db.get(f"tom_{message.chat.username}"))
        type = db.get(f"type_{message.chat.username}")
        amount = db.get(f"amount_{message.chat.username}")
        load_ = db.get('accounts')
        true = 0
        false = 0
        
        if count <=1:
            tom_ch = db.get("tom_ch") if db.exists("tom_ch") else []
            tom_ch.remove(message.chat.username)
            db.set("tom_ch",tom_ch)
            return
        
        channel = message.chat.username
        msg_id = message.message_id
        for y in load_:
            if true >= amount:
                break
            try:

                x = asyncio.run(tom_view(y['s'], channel, msg_id))
            except Exception as e:
                # print(e)
                pass
                # return
        count = int(db.get(f"tom_{message.chat.username}"))
        aft = count - 1
        db.set(f"tom_{message.chat.username}", aft)
        

 
 
def entre_bot(message):
    try:
        it = int(message.text)
        bot.reply_to(message, f"ÿ™ŸÖ ÿ™ÿ∫ŸäŸäÿ± ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸâ {it}",reply_markup=bk)
        db.set("entre_bot", it)
    except:
        bot.reply_to(message, f"ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿπÿ≤Ÿäÿ≤Ÿä",reply_markup=bk)
def get_story_url(message, amount):
    if "/s/" in message.text:
        try:
            link = message.text
            url = f"https://kd1s.com/api/v2?key=231dccbbc91510db5cf78e4f38cf489c&action=add&service=11465&quantity={amount}&link={link}"
            v2 = requests.get(url)
            data = v2.json()
            order = data['order']
            viewff = member_price * amount
            user_info = db.get(f"user_{message.from_user.id}")
            user_info['coins'] = int(user_info['coins']) - int(viewff) 
            db.set(f"user_{message.from_user.id}", user_info)
            bot.reply_to(message, text=f"""‚Ä¢ ÿ®ÿØÿ° ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ( ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿ≥ÿ™Ÿàÿ±Ÿâ ) ‚úÖ
‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {link}
‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}
‚Ä¢ ÿßŸäÿØŸä ÿßŸÑÿ∑ŸÑÿ® : {order}

‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ :¬† {viewff} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ 
‚Ä¢ ÿßÿµÿ®ÿ≠ÿ™ ŸÜŸÇÿßÿ∑ŸÉ : {user_info['coins']}""")
        except Exception as e:
            bot.reply_to(message, text=f"ÿÆÿ∑ÿß ÿ∫Ÿäÿ± ŸÖÿ™ŸàŸÇÿπ : {e}")

def get_code_coin(message, ids):
    if USER_TEMP[message.from_user.id]['code']['id'] != ids:
        return 
    code = message.text
    if not datas.CODE_EXISTS(code):
        bot.send_message(text='ÿπÿ∞ÿ±ÿß ÿßŸÑŸÉŸàÿØ ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ ÿßŸà ÿßŸÜÿ™Ÿáÿ™ ÿµŸÑÿßÿ≠Ÿäÿ™ÿ© ! ', chat_id=message.chat.id)
        return
    cods_data = datas.GET_DATA()

    if message.from_user.id in cods_data['code'][code]['users']:
        bot.send_message(text='ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑŸÉŸàÿØ ÿßŸÉÿ´ÿ± ŸÖŸÜ ŸÖÿ±ÿ© ! ', chat_id=message.chat.id)
        return
    from_user = db.get(f'user_{message.from_user.id}')
    from_user['coins']+=cods_data['code'][code]['coin']
    db.set(f'user_{message.from_user.id}', from_user)
    bot.send_message(text='ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© ŸÑŸä ÿ≠ÿ≥ÿßÿ®ŸÉ : {} ŸÜŸÅÿ∑ÿ© .'.format(cods_data['code'][code]['coin']), chat_id=message.chat.id)
    cods_data['code'][code]['mem']-=1 
    cods_data['code'][code]['users'].append(message.from_user.id) 
    if cods_data['code'][code]['mem'] == 0:
        cods_data['code'].pop(code)
    datas.UPDATE_DATA(cods_data)
    

def hand_get_code(message):
    code = message.text
    ms = bot.send_message(text='ŸÇŸÖ ÿ®Ÿä ÿßÿ±ÿ≥ÿßŸÑ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑', chat_id=message.chat.id)

    bot.register_next_step_handler(ms, hand_get_code_coin, code)


def hand_get_code_coin(message, code):
    try:
        coin = int(message.text)
    except:
        bot.send_message(text='Ÿäÿ±ÿ¨ÿß ÿßÿ±ÿ≥ÿßŸÑ ÿßÿ±ŸÇÿßŸÖ ÿ®ÿØŸàŸÜ ÿßÿ≠ÿ±ŸÅ .', chat_id=message.chat.id)
        return
    ms = bot.send_message(text='ŸÇŸÖ ÿ®Ÿä ÿßÿ±ÿ≥ÿßŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ°', chat_id=message.chat.id)
    bot.register_next_step_handler(ms, hand_get_code_mem, code,coin)
    

def hand_get_code_mem(message, code, coin):
    try:
        mem = int(message.text)
    except:
        bot.send_message(text='Ÿäÿ±ÿ¨ÿß ÿßÿ±ÿ≥ÿßŸÑ ÿßÿ±ŸÇÿßŸÖ ÿ®ÿØŸàŸÜ ÿßÿ≠ÿ±ŸÅ .', chat_id=message.chat.id)
        return
    
    datas.NEW_CODE(code, coin, mem)
    bot.send_message(chat_id=message.chat.id, text=''' ÿ™ŸÖ ÿßŸÜÿ¥ÿßÿ° ŸÉŸàÿØŸÉ ÿ®Ÿä ŸÜÿ¨ÿßÿ¨ . \nÿßŸÑŸÉŸàÿØ : `{}` \nÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ : {} \nÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° : {}'''.format(code, coin, mem))

def make_code_coin(message):
    try:
        coin = int(message.text)
    except:
        bot.send_message(text='Ÿäÿ±ÿ¨ÿß ÿßÿ±ÿ≥ÿßŸÑ ÿßÿ±ŸÇÿßŸÖ ÿ®ÿØŸàŸÜ ÿßÿ≠ÿ±ŸÅ .', chat_id=message.chat.id)
        return
    from_user = db.get(f'user_{message.from_user.id}')

    if from_user['coins'] < coin:
        bot.send_message(text='ŸÑÿß ŸäŸàÿ¨ÿØ ŸÑÿØŸäŸÉ ŸÜŸÇÿßÿ∑ ŸÉÿßŸÅŸä .', chat_id=message.chat.id)
        return 
    
    if coin < 100:
        bot.send_message(text='ÿπÿ∞ÿ±ÿß ÿßŸÇŸÑ ÿπÿØÿØ ŸÑŸÑÿ™ÿ≠ŸàŸäŸÑ 100 ŸÜŸÇÿ∑ÿ© ', chat_id=message.chat.id)
        return 
    
    CODE = RAND_CODE()
    from_user = db.get(f'user_{message.from_user.id}')
    from_user['coins'] -= coin
    print(from_user)
    db.set(f'user_{message.from_user.id}', from_user)
    datas.NEW_USER_CODE(CODE ,coin, message.from_user.id)

    bot.send_message(chat_id=message.chat.id, text='''ÿ™ŸÖ ÿßŸÜÿ¥ÿßÿ° ŸÉŸàÿØŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ \n\n - ÿßŸÑŸÉŸàÿØ : `{}` \n- ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ : {}\n\n'''.format(CODE, coin), parse_mode='Markdown')

def BAND_CHAT(channel_username: str):
    user_id = db.get(f'id_{channel_username}')
    chats_dd = db.get('force_ch')
    chats_dd.remove(channel_username)
    db.set('force_ch', chats_dd)
    balcklist = db.get('chat_blacklist')
    balcklist.append(channel_username)
    db.set('chat_blacklist', balcklist)
    bot.send_message(text=f'ÿ™ŸÖ ÿßŸäŸÇÿßŸÅ ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ ( {channel_username} ) ŸÖŸÜ ŸÇÿ®ŸÑ ÿßŸÑŸÖÿ∑Ÿàÿ± ÿ®ÿ≥ÿ®ÿ® ŸÖÿÆÿßŸÑŸÅÿ© ŸÇŸàÿßŸÜŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ .', chat_id=user_id)    

def ad_gets(msg):
    id = randid()
    ad_temp.update({id:{'msg':msg.text,'user_id':msg.from_user.id}})
    keys = mk(row_width=2)
    keys.add(btn(text='ÿßŸÑÿ∫ÿßÿ°', callback_data='ps'), btn(text='ŸÖŸàÿßŸÅŸÇ ', callback_data=f'ad_send|{id}'))
    bot.send_message(chat_id=msg.chat.id, text='ÿßŸáŸÑ ÿßŸÜÿ™ ŸÖÿ™ÿßÿ¶ŸÉÿØ ŸÖŸÜ ŸÜÿ¥ÿ± ÿßŸÑÿßÿπŸÑÿßŸÜ ÿ≥Ÿäÿ™ŸÖ ÿÆÿµŸÖ 1000 ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿ±ÿµŸäÿØŸÉ . ',reply_markup=keys)


@bot.message_handler(func= lambda m: m.text.split(' ')[0] in COMMAND_PRIC.keys())
def EDIT_PEIC(message):
    try:
        PRIC = int(message.text.split(' ')[1])
    except:
        bot.send_message(text='Ÿäÿ±ÿ¨ÿß ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ≥ÿπÿ± ÿßÿ±ŸÇÿßŸÖ ÿ®ÿØŸàŸÜ ÿßÿ≠ÿ±ŸÅ .', chat_id=message.chat.id)
        return
    data = json.load(open('./datas/prices.json', 'r'))
    data[COMMAND_PRIC[message.text.split(' ')[0]]] = PRIC
    with open('./datas/prices.json', 'w') as JSObj:
        json.dump(data, JSObj, indent=3)
    bot.send_message(text='ÿ™ŸÖ ÿ™ÿ∫Ÿäÿ± ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© ÿ®ŸÜÿ¨ÿßÿ≠', chat_id=message.chat.id)

def get_url_click_force(message):
    xx = checks(message.text)
    if not xx:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    load_ = db.get("accounts")
    session = random.choice(load_)
    o = asyncio.run(get_msgs(session['s'], message.text))
    print(o)
    if not o:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    res = isinstance(o, list)
    if not res:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    keys = mk()
    for text in o:
        btn1 = btn(text=text, callback_data=f"V-{text}-{message.text}")
        keys.add(btn1)
    keys.add(btn('ÿ±ÿ¨Ÿàÿπ ', callback_data='back'))
    bot.reply_to(message, "ÿßÿÆÿ™ÿ± ÿßŸÑÿ≤ÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá", reply_markup=keys)
def get_amount_click_force(message, text, url):
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
        return
    if amount < 1:
        bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
        return
    if amount > 2000:
        bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
        return
    pr = vote_price * amount
    acc = db.get(f'user_{message.from_user.id}')
    if int(pr) > acc['coins']:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
    bot.register_next_step_handler(x, get_time_click_force, amount, text, url)
    return

def get_time_click_force(message, amount, text, url):
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    db.set(f"serv_{message.from_user.id}", True)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true, false = 0, 0
    tmmmm = 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            x = asyncio.run(click_force(y['s'], text, url, time))
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
            else:
                false += 1
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        acc = db.get(f'user_{message.from_user.id}')
        for ix in range(true):
            acc['coins'] -= vote_price
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {amount*vote_price}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
    
try:
    bot.infinity_polling()
    bot2.infinity_polling()
except:
    pass




